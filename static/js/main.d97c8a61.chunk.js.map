{"version":3,"sources":["components/Navbar/Navbar.module.scss","components/Profile/profileInfo/ProfileInfo.module.scss","components/Users/Users.module.scss","components/Messages/Messages.module.scss","components/Profile/posts/post/Post.module.scss","components/Profile/avatar/Avatar.module.scss","components/Header/Header.module.scss","components/Profile/posts/MyPosts.module.scss","components/Messages/message/MessageRequest.module.scss","components/Messages/message/MessageResponse.module.scss","components/Profile/Profile.module.scss","components/Profile/avatar/img/IRh4RWeX.jpg","components/Profile/posts/post/img/ghML0mY_.jpg","components/Messages/conversation/Conversation.module.scss","state/reducers/dialogs_reducer.ts","state/reducers/profile_reducer.ts","state/reducers/users_reducer.ts","state/redux_store.ts","components/Header/Header.tsx","components/Navbar/Navbar.tsx","components/Profile/avatar/Avatar.tsx","components/Profile/profileInfo/ProfileInfo.tsx","components/Profile/posts/post/Post.tsx","components/Profile/posts/MyPosts.tsx","components/Profile/posts/MyPostsContainer.tsx","components/Profile/Profile.tsx","components/Messages/message/MessageRequest.tsx","components/Messages/message/MessageResponse.tsx","components/Messages/conversation/Conversation.tsx","components/Messages/DialogLink.tsx","components/Messages/Messages.tsx","components/Messages/MessagesContainer.tsx","components/Users/UsersContainer.tsx","components/Users/Users.tsx","App.tsx","index.tsx"],"names":["module","exports","navWrap","navContent","active","link","navIcon","infoWrap","infoItem","itemTitle","itemDescription","descriptionText","usersWrap","innerWrap","avaWrap","avaImg","ava","avaSettings","avaBtn","userInfoWrap","user","userName","userStatus","location","country","city","messagesWrap","dialogsInner","friendsMessages","messagesLink","linkTitle","messagesContent","messageInput","inputArea","inputBtn","postWrap","postAutor","postContent","postText","postLikes","likeIcon","headerWrap","headLogo","headContent","postsWrap","inputPost","messageWrap","message","angle","profileWrap","avaDiscript","__webpack_require__","p","conversationWrap","initialState","dialogs","id","v1","name","messages","text","newMessageText","posts","likes","newPostText","InitialState","users","image","followed","status","fullName","rootReducer","combineReducers","profileReducer","state","arguments","length","undefined","action","type","stateCopy","Object","objectSpread","toConsumableArray","newPost","unshift","newText","dialogsReducer","newMessage","push","usersReducer","map","u","userID","store","createStore","Header","react_default","a","createElement","className","styles","href","index_esm","logo","size","Navbar","react_router_dom","to","activeClassName","bs_index_esm","navText","Avatar","src","img","alt","ProfileInfo","Post","_ref","ai_index_esm","likesCount","MyPosts","onAddPost","onNewTextChangeHandler","postsEl","post","post_Post","key","value","onChange","placeholder","onClick","MyPostsContainer","connect","dispatch","el","currentTarget","Profile","avatar_Avatar","profileInfo_ProfileInfo","MessageRequest","MessageResponse","Conversation","newMessageEl","message_MessageResponse","message_MessageRequest","DialogLink","Messages","onAddMessage","onNewMessageChangeHandler","dialogsEl","dialog","Messages_DialogLink","conversation_Conversation","MessagesContainer","UsersContainer","App","components_Header_Header","components_Navbar_Navbar","react_router","path","render","components_Profile_Profile","ReactDOM","StrictMode","es","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.d97c8a61.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"navWrap\":\"Navbar_navWrap__18mrh\",\"navContent\":\"Navbar_navContent__2pfvB\",\"active\":\"Navbar_active__QtVGT\",\"link\":\"Navbar_link__3vOxA\",\"navIcon\":\"Navbar_navIcon__36W5q\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"infoWrap\":\"ProfileInfo_infoWrap__1Sogx\",\"infoItem\":\"ProfileInfo_infoItem__x1wAk\",\"itemTitle\":\"ProfileInfo_itemTitle__sIu7o\",\"itemDescription\":\"ProfileInfo_itemDescription__1muTk\",\"descriptionText\":\"ProfileInfo_descriptionText__2PDqw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"usersWrap\":\"Users_usersWrap__e1s2w\",\"innerWrap\":\"Users_innerWrap__1HFul\",\"avaWrap\":\"Users_avaWrap__rzbwa\",\"avaImg\":\"Users_avaImg__1UWqP\",\"ava\":\"Users_ava__23Qog\",\"avaSettings\":\"Users_avaSettings__3C8js\",\"avaBtn\":\"Users_avaBtn__157ef\",\"userInfoWrap\":\"Users_userInfoWrap__2werw\",\"user\":\"Users_user__16aU1\",\"userName\":\"Users_userName__3B_lJ\",\"userStatus\":\"Users_userStatus__P3CYk\",\"location\":\"Users_location__1pNzC\",\"country\":\"Users_country__16fVl\",\"city\":\"Users_city__2TDNy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"messagesWrap\":\"Messages_messagesWrap__2nz78\",\"dialogsInner\":\"Messages_dialogsInner__2GJPn\",\"friendsMessages\":\"Messages_friendsMessages__1aUAf\",\"active\":\"Messages_active__29Eub\",\"messagesLink\":\"Messages_messagesLink__2jVMy\",\"linkTitle\":\"Messages_linkTitle__fjSYB\",\"messagesContent\":\"Messages_messagesContent__AR3ux\",\"messageInput\":\"Messages_messageInput__2fsWP\",\"inputArea\":\"Messages_inputArea__2y7ur\",\"inputBtn\":\"Messages_inputBtn__1TLdz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postWrap\":\"Post_postWrap__33QUx\",\"postAutor\":\"Post_postAutor__OPZNZ\",\"postContent\":\"Post_postContent__2wo3j\",\"ava\":\"Post_ava__1tdgG\",\"postText\":\"Post_postText__y2cCX\",\"postLikes\":\"Post_postLikes__3rZc0\",\"likeIcon\":\"Post_likeIcon__34Epz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"avaWrap\":\"Avatar_avaWrap__3tpKP\",\"avaImg\":\"Avatar_avaImg__OYA3s\",\"ava\":\"Avatar_ava__3MD2v\",\"avaSettings\":\"Avatar_avaSettings__1BNE_\",\"avaBtn\":\"Avatar_avaBtn__cpEjP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"headerWrap\":\"Header_headerWrap__3-83i\",\"headLogo\":\"Header_headLogo__3TQve\",\"headContent\":\"Header_headContent__3deog\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsWrap\":\"MyPosts_postsWrap__31Cb8\",\"inputPost\":\"MyPosts_inputPost__2BE_Y\",\"inputArea\":\"MyPosts_inputArea__3WVLA\",\"inputBtn\":\"MyPosts_inputBtn__2D68l\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"messageWrap\":\"MessageRequest_messageWrap__1u85V\",\"message\":\"MessageRequest_message__1i1G-\",\"angle\":\"MessageRequest_angle__24Y4D\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"messageWrap\":\"MessageResponse_messageWrap__1V2Dh\",\"message\":\"MessageResponse_message__7KkQ2\",\"angle\":\"MessageResponse_angle__3pby9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profileWrap\":\"Profile_profileWrap__37dOT\",\"avaDiscript\":\"Profile_avaDiscript__33R9Z\"};","module.exports = __webpack_public_path__ + \"static/media/IRh4RWeX.eb838340.jpg\";","module.exports = __webpack_public_path__ + \"static/media/ghML0mY_.eb56b1a4.jpg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"conversationWrap\":\"Conversation_conversationWrap__39JRi\"};","import {v1} from 'uuid';\r\nimport {\r\n    AddMessageActionType,\r\n    AllActionTypes,\r\n    ChangeNewMessageActionType\r\n} from '../redux_store';\r\n\r\nexport type DialogsType = {\r\n    id: string\r\n    name: string\r\n}\r\n\r\nexport type MessageType = {\r\n    id: string\r\n    text: string\r\n}\r\n\r\nexport type InitialDialogsStateType = typeof initialState\r\n\r\nconst initialState = {\r\n    dialogs: [\r\n        {\r\n            id: v1(),\r\n            name: 'Amy Wong'\r\n        },\r\n        {\r\n            id: v1(),\r\n            name: 'Zapp Brannigan'\r\n        },\r\n        {\r\n            id: v1(),\r\n            name: 'John D. Zoidberg'\r\n        },\r\n        {\r\n            id: v1(),\r\n            name: 'Turanga Leela'\r\n        },\r\n        {\r\n            id: v1(),\r\n            name: 'Hubert J. Farnsworth'\r\n        },\r\n    ] as Array<DialogsType>,\r\n    messages: [\r\n        {\r\n            id: v1(),\r\n            text: 'Hi! How are you?'\r\n        },\r\n        {\r\n            id: v1(),\r\n            text: 'Hi! I\\'m fine, thanks!'\r\n        }\r\n    ] as Array<MessageType>,\r\n    newMessageText: ''\r\n}\r\n\r\nexport const dialogsReducer = (state: InitialDialogsStateType = initialState, action: AllActionTypes): InitialDialogsStateType => {\r\n\r\n    switch (action.type) {\r\n        case \"ADD-MESSAGE\": {\r\n            let stateCopy = {...state}\r\n            stateCopy.messages = [...state.messages]\r\n            const newMessage: MessageType = {\r\n                id: v1(),\r\n                text: state.newMessageText\r\n            }\r\n            stateCopy.messages.push(newMessage);\r\n            stateCopy.newMessageText = \"\";\r\n            return stateCopy;\r\n        }\r\n        case \"CHANGE-NEW-MESSAGE\": {\r\n            let stateCopy = {...state}\r\n            stateCopy.newMessageText = action.newMessage;\r\n            return stateCopy;\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n// === ACTION CREATORS ===\r\nexport const addMessageAC = (): AddMessageActionType => {\r\n    return {\r\n        type: \"ADD-MESSAGE\"\r\n    }\r\n}\r\n\r\nexport const changeNewMessageAC = (newMessage: string): ChangeNewMessageActionType => {\r\n    return {\r\n        type: \"CHANGE-NEW-MESSAGE\",\r\n        newMessage: newMessage\r\n    }\r\n}\r\n\r\n// === / ACTION CREATORS ===","import {v1} from 'uuid';\r\nimport {\r\n    AddPostActionType,\r\n    AllActionTypes,\r\n    ChangeNewTextActionType\r\n} from '../redux_store';\r\n\r\nexport type PostsType = {\r\n    id: string\r\n    name: string\r\n    text: string\r\n    likes: number\r\n}\r\n\r\nexport type InitialProfileStateType = typeof initialState\r\n\r\nconst initialState = {\r\n    posts: [\r\n        {\r\n            id: v1(),\r\n            name: 'Philip J. Fry',\r\n            text: 'Phew! What a terrible dream I had! I will never sleep again!',\r\n            likes: 12\r\n        },\r\n        {\r\n            id: v1(),\r\n            name: 'John D. Zoidberg',\r\n            text: 'What\\'s up?',\r\n            likes: 5\r\n        },\r\n        {\r\n            id: v1(),\r\n            name: 'Turanga Leela',\r\n            text: 'Have you run out of idiotic thoughts?',\r\n            likes: 24\r\n        },\r\n    ] as Array<PostsType>,\r\n        newPostText: ''\r\n}\r\n\r\n\r\nexport const profileReducer = (state: InitialProfileStateType = initialState, action: AllActionTypes): InitialProfileStateType => {\r\n    switch (action.type){\r\n        case \"ADD-POST\": {\r\n            let stateCopy = {...state}\r\n            stateCopy.posts = [...state.posts]\r\n            const newPost: PostsType = {\r\n                id: v1(),\r\n                name: '%@User_name@%',\r\n                text: state.newPostText,\r\n                likes: 0\r\n            }\r\n            stateCopy.posts.unshift(newPost)\r\n            stateCopy.newPostText = \"\";\r\n            return stateCopy;\r\n        }\r\n        case \"CHANGE-NEW-TEXT\": {\r\n            let stateCopy = {...state}\r\n            stateCopy.newPostText = action.newText;\r\n            return stateCopy;\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n// === ACTION CREATORS ===\r\nexport const addPostAC = (): AddPostActionType => {\r\n    return {\r\n        type: \"ADD-POST\"\r\n    }\r\n}\r\n\r\nexport const changeNewTextAC = (newText: string): ChangeNewTextActionType => {\r\n    return {\r\n        type: \"CHANGE-NEW-TEXT\",\r\n        newText: newText\r\n    }\r\n}\r\n\r\n// === / ACTION CREATORS ===","import {v1} from 'uuid';\r\nimport {\r\n    AllActionTypes,\r\n    FollowAT,\r\n    UnfollowAT\r\n} from '../redux_store';\r\n\r\nexport type UserType = {\r\n    image: string\r\n    id: string\r\n    followed: boolean\r\n    fullName: string\r\n    status: string\r\n    location: LocationType\r\n}\r\n\r\nexport type LocationType = {\r\n    city: string\r\n    country: string\r\n}\r\n\r\nexport type InitialUsersStateType = typeof InitialState\r\n\r\nconst InitialState = {\r\n    users: [\r\n        {\r\n            image: 'https://static.wikia.nocookie.net/futurama/images/1/10/Leela.jpg/revision/latest/scale-to-width-down/250?cb=20141220211651&path-prefix=ru',\r\n            id: v1(),\r\n            followed: false,\r\n            status: 'Never give up!',\r\n            fullName: 'Turanga Leela',\r\n            location: {city: 'Old New York', country: 'USA'}\r\n        },\r\n        {\r\n            image: 'https://static.wikia.nocookie.net/futurama/images/0/0a/Zoidberg_rev.jpg/revision/latest/scale-to-width-down/250?cb=20130722200511&path-prefix=ru',\r\n            id: v1(),\r\n            followed: false,\r\n            status: 'Whoop! Whoop! Whoop! Whoop! Whoop!',\r\n            fullName: 'John D. Zoidberg',\r\n            location: {city: 'Noname', country: 'Decapod 10'}\r\n        },\r\n        {\r\n            image: 'https://static.wikia.nocookie.net/futurama/images/2/28/Amy_rev.jpg/revision/latest/scale-to-width-down/250?cb=20130722200517&path-prefix=ru',\r\n            id: v1(),\r\n            followed: false,\r\n            status: 'Ok Fry, we\\'re done putting on the bra!',\r\n            fullName: 'Amy Wong',\r\n            location: {city: 'New York', country: 'USA'}\r\n        }\r\n    ] as Array<UserType>\r\n}\r\n\r\nexport const usersReducer = (state: InitialUsersStateType = InitialState, action: AllActionTypes): InitialUsersStateType => {\r\n    switch (action.type) {\r\n        case 'FOLLOW':\r\n            return {\r\n                ...state, users: state.users.map(u => {\r\n                    if (u.id === action.userID) {\r\n                        return {...u, followed: true}\r\n                    }\r\n                    return u\r\n                })\r\n            }\r\n        case 'UNFOLLOW':\r\n            return {\r\n                ...state, users: state.users.map(u => {\r\n                    if (u.id === action.userID) {\r\n                        return {...u, followed: false}\r\n                    }\r\n                    return u\r\n                })\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n// === ACTION CREATORS ===\r\nexport const FollowAC = (): FollowAT => {\r\n    return {\r\n        type: 'FOLLOW',\r\n        userID: v1()\r\n    }\r\n}\r\n\r\nexport const UnfollowAC = (): UnfollowAT => {\r\n    return {\r\n        type: 'UNFOLLOW',\r\n        userID: v1()\r\n    }\r\n}\r\n// === / ACTION CREATORS ===\r\n","import {combineReducers, createStore } from \"redux\";\r\nimport {dialogsReducer} from './reducers/dialogs_reducer';\r\nimport {profileReducer} from './reducers/profile_reducer';\r\nimport {usersReducer} from './reducers/users_reducer';\r\n\r\nconst rootReducer = combineReducers({\r\n    profileReducer,\r\n    dialogsReducer,\r\n    usersReducer\r\n})\r\n\r\nexport type RootStateType = ReturnType<typeof rootReducer>\r\n\r\n// === ACTION TYPES ===\r\nexport type AllActionTypes = AddPostActionType |\r\n    ChangeNewTextActionType |\r\n    AddMessageActionType |\r\n    ChangeNewMessageActionType |\r\n    FollowAT |\r\n    UnfollowAT\r\n\r\nexport type AddPostActionType = {\r\n    type: 'ADD-POST'\r\n}\r\n\r\nexport type ChangeNewTextActionType = {\r\n    type: 'CHANGE-NEW-TEXT'\r\n    newText: string\r\n}\r\n\r\nexport type AddMessageActionType = {\r\n    type: 'ADD-MESSAGE'\r\n}\r\n\r\nexport type ChangeNewMessageActionType = {\r\n    type: 'CHANGE-NEW-MESSAGE'\r\n    newMessage: string\r\n}\r\n\r\nexport type FollowAT = {\r\n    type: 'FOLLOW'\r\n    userID: string\r\n}\r\n\r\nexport type UnfollowAT = {\r\n    type: 'UNFOLLOW'\r\n    userID: string\r\n}\r\n// === / ACTION TYPES ===\r\n\r\nexport const store = createStore(rootReducer);\r\n","import React from 'react';\r\nimport styles from './Header.module.scss';\r\nimport {DiLinux} from \"react-icons/di\";\r\n\r\nconst Header: React.FC = () => {\r\n    return (\r\n        <header className={styles.headerWrap}>\r\n            <a href=\"#\" className={styles.headLogo}>\r\n                <DiLinux className={styles.logo} size=\"2em\" />\r\n            </a>\r\n            <div className={styles.headContent}>Welcome to my SocialNetwork</div>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport styles from './Navbar.module.scss';\r\nimport { BsFillGrid1X2Fill, BsFillChatFill,\r\n    BsPeopleFill, BsFillExclamationSquareFill } from \"react-icons/bs\";\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst Navbar: React.FC = () => {\r\n    return (\r\n        <section className={styles.navWrap}>\r\n            <div className={styles.navContent}>\r\n                <NavLink to=\"/profile\" className={styles.link} activeClassName={styles.active}>\r\n                    <BsFillGrid1X2Fill className={styles.navIcon}/>\r\n                    <div  className={styles.navText}>\r\n                        Profile\r\n                    </div>\r\n                </NavLink>\r\n                <NavLink to=\"/messages\" className={styles.link} activeClassName={styles.active}>\r\n                    <BsFillChatFill className={styles.navIcon}/>\r\n                    <div className={styles.navText}>\r\n                        Messages\r\n                    </div>\r\n                </NavLink>\r\n                <NavLink to=\"/friends\" className={styles.link} activeClassName={styles.active}>\r\n                    <BsPeopleFill className={styles.navIcon}/>\r\n                    <div className={styles.navText}>\r\n                        Friends\r\n                    </div>\r\n                </NavLink>\r\n                <NavLink to=\"/news\" className={styles.link} activeClassName={styles.active}>\r\n                    <BsFillExclamationSquareFill className={styles.navIcon}/>\r\n                    <div className={styles.navText}>\r\n                        News\r\n                    </div>\r\n                </NavLink>\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default Navbar;","import React from 'react';\r\nimport styles from './Avatar.module.scss';\r\nimport img from './img/IRh4RWeX.jpg';\r\n\r\nconst Avatar: React.FC = () => {\r\n    return (\r\n        <section className={styles.avaWrap}>\r\n            <div className={styles.avaImg}>\r\n                <img className={styles.ava} src={img} alt=\"Avatar\"/>\r\n            </div>\r\n            <div className={styles.avaSettings}>\r\n                <button className={styles.avaBtn}>\r\n                    Edit\r\n                </button>\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default Avatar;","import React from 'react';\r\nimport styles from './ProfileInfo.module.scss';\r\n\r\nconst ProfileInfo: React.FC = () => {\r\n    return (\r\n        <section className={styles.infoWrap}>\r\n            <div className={styles.infoItem}>\r\n                <div className={styles.itemTitle}>\r\n                    Name\r\n                </div>\r\n                <div className={styles.itemDescription}>\r\n                    Bender Rodriguez\r\n                </div>\r\n            </div>\r\n            <div className={styles.infoItem}>\r\n                <div className={styles.itemTitle}>\r\n                    Birth\r\n                </div>\r\n                <div className={styles.itemDescription}>\r\n                    10/11/1989\r\n                </div>\r\n            </div>\r\n            <div className={styles.infoItem}>\r\n                <div className={styles.itemTitle}>\r\n                    Education\r\n                </div>\r\n                <div className={styles.itemDescription}>\r\n                    University degree\r\n                </div>\r\n            </div>\r\n            <div className={styles.infoItem}>\r\n                <div className={styles.itemTitle}>\r\n                    Quotes\r\n                </div>\r\n                <div className={styles.itemDescription}>\r\n                    <div className={styles.descriptionText}>\r\n                        \"I'm going to build my own theme park! With blackjack! And hookers!\"\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default ProfileInfo;","import React from 'react';\r\nimport styles from './Post.module.scss';\r\nimport img from './img/ghML0mY_.jpg';\r\nimport { AiFillLike } from \"react-icons/ai\";\r\n\r\ntype PostType = {\r\n    name: string\r\n    text: string\r\n    likes: number\r\n}\r\n\r\nconst Post: React.FC<PostType> = ({name,\r\n                                      text,\r\n                                      likes}) => {\r\n    return (\r\n        <section className={styles.postWrap}>\r\n            <div className={styles.postAutor}>\r\n                {name}\r\n            </div>\r\n            <div className={styles.postContent}>\r\n                <div className={styles.ava}>\r\n                    <img src={img} alt=\"Avatar\"/>\r\n                </div>\r\n                <div className={styles.postText}>\r\n                    &#8220;{text}&#8221;\r\n                </div>\r\n            </div>\r\n            <div className={styles.postLikes}>\r\n                <AiFillLike className={styles.likeIcon}/>\r\n                <div className={styles.likesCount}>\r\n                    {likes}\r\n                </div>\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default Post;","import React, {ChangeEvent} from 'react';\r\nimport styles from './MyPosts.module.scss'\r\nimport {BsBoxArrowInDown} from 'react-icons/bs';\r\nimport Post from './post/Post';\r\nimport { MyPostsPropsType } from './MyPostsContainer';\r\n\r\nconst MyPosts: React.FC<MyPostsPropsType> = ({posts,\r\n                                                 newPost,\r\n                                                 onAddPost,\r\n                                                 onNewTextChangeHandler}) => {\r\n\r\n    let postsEl = posts.map((post) => <Post key={post.id}\r\n                                                  name={post.name}\r\n                                                  text={post.text}\r\n                                                  likes={post.likes}/>)\r\n\r\n    const onPostChange = (text: ChangeEvent<HTMLInputElement>) => {\r\n        onNewTextChangeHandler(text)\r\n    }\r\n\r\n    return (\r\n        <section className={styles.postsWrap}>\r\n            <div className={styles.inputPost}>\r\n                <div className={styles.inputArea}>\r\n                    <input type=\"text\"\r\n                           value={newPost}\r\n                           onChange={onPostChange}\r\n                           placeholder=\"Enter your message\"\r\n                    />\r\n                </div>\r\n                <BsBoxArrowInDown onClick={onAddPost}\r\n                                  className={styles.inputBtn}\r\n                                  size=\"2em\"\r\n                />\r\n            </div>\r\n            {postsEl}\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default MyPosts;\r\n","import {ChangeEvent} from 'react';\r\nimport {\r\n    addPostAC,\r\n    changeNewTextAC,\r\n    PostsType\r\n} from '../../../state/reducers/profile_reducer';\r\nimport MyPosts from './MyPosts';\r\nimport {RootStateType} from '../../../state/redux_store';\r\nimport {connect} from 'react-redux';\r\nimport {Dispatch} from 'redux';\r\n\r\ntype MapStatePropsType = {\r\n    posts: Array<PostsType>\r\n    newPost: string\r\n}\r\n\r\ntype MapDispatchPropsType = {\r\n    onAddPost: () => void\r\n    onNewTextChangeHandler: (el: ChangeEvent<HTMLInputElement>) => void\r\n}\r\n\r\nexport type MyPostsPropsType = MapStatePropsType & MapDispatchPropsType\r\n\r\nlet mapStateToProps = (state: RootStateType): MapStatePropsType => {\r\n    return {\r\n        posts: state.profileReducer.posts,\r\n        newPost: state.profileReducer.newPostText\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch: Dispatch): MapDispatchPropsType => {\r\n    return {\r\n        onAddPost: () => {\r\n            dispatch(addPostAC())\r\n        },\r\n        onNewTextChangeHandler: (el: ChangeEvent<HTMLInputElement>) => {\r\n            dispatch(changeNewTextAC(el.currentTarget.value))\r\n        }\r\n    }\r\n}\r\n\r\nexport const MyPostsContainer = connect (mapStateToProps, mapDispatchToProps)(MyPosts)","import React from 'react';\r\nimport styles from './Profile.module.scss'\r\nimport Avatar from './avatar/Avatar';\r\nimport ProfileInfo from './profileInfo/ProfileInfo';\r\nimport {MyPostsContainer} from './posts/MyPostsContainer';\r\n\r\nconst Profile: React.FC = () => {\r\n    return (\r\n        <section className={styles.profileWrap}>\r\n          <div className={styles.avaDiscript}>\r\n              <Avatar/>\r\n              <ProfileInfo />\r\n          </div>\r\n            <MyPostsContainer />\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default Profile;","import React from 'react';\r\nimport styles from './MessageRequest.module.scss';\r\n\r\ntype MessageRequestPropsType = {\r\n    message: string\r\n}\r\n\r\nconst MessageRequest: React.FC<MessageRequestPropsType> = ({message}) => {\r\n    return (\r\n        <section className={styles.messageWrap}>\r\n            <div className={styles.angle}/>\r\n            <div className={styles.message}>\r\n                {message}\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default MessageRequest;","import React from 'react';\r\nimport styles from './MessageResponse.module.scss';\r\n\r\ntype MessageResponsePropsType = {\r\n    message: string\r\n}\r\n\r\nconst MessageResponse: React.FC<MessageResponsePropsType> = ({message}) => {\r\n    return (\r\n        <section className={styles.messageWrap}>\r\n            <div className={styles.message}>\r\n                {message}\r\n            </div>\r\n            <div className={styles.angle}/>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default MessageResponse;","import React from 'react';\r\nimport styles from './Conversation.module.scss';\r\nimport MessageRequest from '../message/MessageRequest';\r\nimport MessageResponse from '../message/MessageResponse';\r\nimport {MessageType} from '../../../state/reducers/dialogs_reducer';\r\n\r\ntype ConversationType = {\r\n    message: Array<MessageType>\r\n}\r\n\r\nconst Conversation: React.FC<ConversationType> = ({message}) => {\r\n\r\n    const newMessageEl = message.map((message:MessageType) => <MessageResponse key={message.id}\r\n                                                                                     message={message.text}/>)\r\n\r\n    return (\r\n        <section className={styles.conversationWrap}>\r\n            <MessageRequest message={message[0].text}/>\r\n            {newMessageEl}\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default Conversation;","import {NavLink} from 'react-router-dom';\r\nimport styles from './Messages.module.scss';\r\nimport React from 'react';\r\n\r\ntype DialogsLinkPropsType = {\r\n    id: string\r\n    name: string\r\n}\r\n\r\nconst DialogLink: React.FC<DialogsLinkPropsType> = ({name,\r\n                                                        id}) => {\r\n    return (\r\n        <NavLink to={'/messages/conversation/' + id}\r\n                 className={styles.messagesLink}\r\n                 activeClassName={styles.active}\r\n        >\r\n            <div className={styles.linkTitle}>{name}</div>\r\n        </NavLink>\r\n    )\r\n}\r\n\r\nexport default DialogLink;\r\n\r\n","import React, {ChangeEvent} from 'react';\r\nimport styles from './Messages.module.scss'\r\nimport {BsBoxArrowInUp} from 'react-icons/bs';\r\nimport Conversation from './conversation/Conversation';\r\nimport DialogLink from './DialogLink';\r\nimport {DialogsType} from '../../state/reducers/dialogs_reducer';\r\nimport {MessagesPropsType} from './MessagesContainer';\r\n\r\nconst Messages: React.FC<MessagesPropsType> = ({dialogs,\r\n                                                   messages,\r\n                                                   newMessage,\r\n                                                   onAddMessage,\r\n                                                   onNewMessageChangeHandler} ) => {\r\n\r\n    let dialogsEl = dialogs.map((dialog: DialogsType) => <DialogLink key={dialog.id}\r\n                                                                           id={dialog.id}\r\n                                                                           name={dialog.name}/>)\r\n\r\n    const newMessageChangeHandler = (text: ChangeEvent<HTMLInputElement>) => onNewMessageChangeHandler(text)\r\n\r\n    return (\r\n        <section className={styles.messagesWrap}>\r\n            <div className={styles.dialogsInner}>\r\n                <div className={styles.friendsMessages}>\r\n                    {dialogsEl}\r\n                </div>\r\n                <div className={styles.messagesContent}>\r\n                    <Conversation message={messages}/>\r\n                </div>\r\n            </div>\r\n            <div className={styles.messageInput}>\r\n                <div className={styles.inputArea}>\r\n                    <input type=\"text\"\r\n                           value={newMessage}\r\n                           onChange={newMessageChangeHandler}\r\n                           placeholder=\"Enter your message\"\r\n                    />\r\n                </div>\r\n                <BsBoxArrowInUp onClick={onAddMessage} //React.DOMAttributes<T>.onClick?: React.MouseEventHandler<SVGElement>\r\n                                className={styles.inputBtn}\r\n                                size=\"2em\"\r\n                />\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default Messages;","import {ChangeEvent} from 'react';\r\nimport {\r\n    addMessageAC,\r\n    changeNewMessageAC,\r\n    DialogsType,\r\n    MessageType\r\n} from '../../state/reducers/dialogs_reducer';\r\nimport Messages from './Messages';\r\nimport {connect} from 'react-redux';\r\nimport {RootStateType} from '../../state/redux_store';\r\nimport { Dispatch } from 'redux';\r\n\r\ntype MapStatePropsType = {\r\n    newMessage: string\r\n    dialogs: Array<DialogsType>\r\n    messages: Array<MessageType>\r\n}\r\n\r\ntype MapDispatchPropsType = {\r\n    onAddMessage: () => void\r\n    onNewMessageChangeHandler: (el: ChangeEvent<HTMLInputElement>) => void\r\n}\r\n\r\nexport type MessagesPropsType = MapStatePropsType & MapDispatchPropsType\r\n\r\nlet mapStateToProps = (state: RootStateType): MapStatePropsType => {\r\n    return {\r\n        newMessage: state.dialogsReducer.newMessageText,\r\n        dialogs: state.dialogsReducer.dialogs,\r\n        messages: state.dialogsReducer.messages\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch: Dispatch): MapDispatchPropsType => {\r\n    return {\r\n        onAddMessage: () => {\r\n            dispatch(addMessageAC())\r\n        },\r\n        onNewMessageChangeHandler: (el: ChangeEvent<HTMLInputElement>) => {\r\n            dispatch(changeNewMessageAC(el.currentTarget.value))\r\n        }\r\n    }\r\n}\r\n\r\nexport const MessagesContainer = connect(mapStateToProps, mapDispatchToProps)(Messages);\r\n\r\n","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {Users} from './Users';\r\nimport {RootStateType} from '../../state/redux_store';\r\nimport {UserType} from '../../state/reducers/users_reducer';\r\nimport {Dispatch} from 'redux';\r\n\r\ntype MapStatePropsType = {\r\n    users: Array<UserType>\r\n}\r\n\r\ntype MapDispatchPropsType = {\r\n\r\n}\r\n\r\nexport type UsersPropsType = MapStatePropsType & MapDispatchPropsType\r\n\r\nlet mapStateToProps = (state: RootStateType): MapStatePropsType => {\r\n    return  ({users: state.usersReducer.users})\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch: Dispatch) => {\r\n    return {}\r\n}\r\n\r\nexport const UsersContainer = connect(mapStateToProps, mapDispatchToProps)(Users)","import React from 'react';\r\nimport styles from './Users.module.scss';\r\nimport {UsersPropsType} from './UsersContainer';\r\n\r\nexport const Users: React.FC<UsersPropsType> = ({users}) => {\r\n    return (\r\n        <section className={styles.usersWrap}>\r\n            {\r\n                users.map(u => (\r\n                    <section className={styles.innerWrap}>\r\n                        <div className={styles.avaWrap}>\r\n                            <div className={styles.avaImg}>\r\n                                <img className={styles.ava} src={u.image} alt=\"Avatar\"/>\r\n                            </div>\r\n                            <div className={styles.avaSettings}>\r\n                                <button className={styles.avaBtn}>\r\n                                    Edit\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                        <div className={styles.userInfoWrap}>\r\n                           <div className={styles.user}>\r\n                               <div className={styles.userName}>\r\n                                   {u.fullName}\r\n                               </div>\r\n                               <div className={styles.userStatus}>\r\n                                   &#8220;{u.status}&#8221;\r\n                               </div>\r\n                           </div>\r\n                            <div className={styles.location}>\r\n                                <div className={styles.country}>\r\n                                    {u.location.country}\r\n                                </div>\r\n                                <div className={styles.city}>\r\n                                    {u.location.city}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </section>\r\n                ))\r\n            }\r\n        </section>\r\n    )\r\n}","import React from 'react';\nimport './App.scss';\nimport Header from './components/Header/Header';\nimport Navbar from './components/Navbar/Navbar';\nimport Profile from './components/Profile/Profile';\nimport {BrowserRouter, Redirect, Route, Switch} from 'react-router-dom';\nimport {MessagesContainer} from './components/Messages/MessagesContainer';\nimport {UsersContainer} from './components/Users/UsersContainer';\n\n\nfunction App() {\n    return (\n        <BrowserRouter>\n            <div className=\"App-wrapper\">\n                <Header/>\n                <Navbar/>\n                <section className=\"Content\">\n                    <Switch>\n                        <Route path=\"/profile\" render={() => <Profile />}/>\n                        <Route path=\"/messages\" render={() => <MessagesContainer/>}/>\n                        <Route path=\"/friends\" render={() => <UsersContainer/>}/>\n                        <Redirect to=\"/profile\"/>\n                    </Switch>\n                </section>\n            </div>\n        </BrowserRouter>\n    );\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport React from 'react';\nimport './index.scss';\nimport {store} from './state/redux_store';\nimport App from './App';\nimport {Provider} from 'react-redux';\n\nReactDOM.render(\n    <React.StrictMode>\n        <Provider store={store}>\n            <App/>\n        </Provider>\n    </React.StrictMode>,\n    document.getElementById('root')\n);"],"sourceRoot":""}