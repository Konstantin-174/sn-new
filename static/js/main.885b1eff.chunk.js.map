{"version":3,"sources":["components/Messages/Messages.module.scss","common/Preloader/PreloaderSVG.module.scss","components/Profile/profileInfo/ProfileInfo.module.scss","components/Profile/posts/post/Post.module.scss","components/Profile/avatar/Avatar.module.scss","components/Profile/posts/MyPosts.module.scss","components/Header/Header.module.scss","components/Users/images/nonameUser.jpg","components/Messages/message/MessageRequest.module.scss","components/Messages/message/MessageResponse.module.scss","components/Profile/Profile.module.scss","components/Navbar/Navbar.module.scss","components/Messages/conversation/Conversation.module.scss","components/Users/Users.module.scss","state/reducers/dialogs_reducer.ts","api/api.ts","state/reducers/profile_reducer.ts","state/reducers/users_reducer.ts","state/reducers/auth_reducer.ts","state/redux_store.ts","components/Navbar/Navbar.tsx","components/Messages/message/MessageRequest.tsx","components/Messages/message/MessageResponse.tsx","components/Messages/conversation/Conversation.tsx","components/Messages/DialogLink.tsx","components/Messages/Messages.tsx","components/Messages/MessagesContainer.tsx","components/Users/UsersFC.tsx","common/Preloader/PreloaderSVG.tsx","components/Users/UsersContainer.tsx","components/Profile/avatar/Avatar.tsx","components/Profile/profileInfo/ProfileInfo.tsx","components/Profile/posts/post/Post.tsx","components/Profile/posts/MyPosts.tsx","components/Profile/posts/MyPostsContainer.tsx","components/Profile/Profile.tsx","components/Profile/ProfileContainer.tsx","components/Header/HeaderFC.tsx","components/Header/HeaderContainer.tsx","App.tsx","index.tsx"],"names":["module","exports","messagesWrap","dialogsInner","friendsMessages","active","messagesLink","linkTitle","messagesContent","messageInput","inputArea","inputBtn","mainFader","loader","pulse","path7","path6","path5","path4","path3","path2","path1","path0","infoWrap","infoItem","itemTitle","itemDescription","descriptionText","postWrap","postAutor","postContent","ava","postText","postLikes","likeIcon","avaWrap","avaImg","avaSettings","avaBtn","postsWrap","inputPost","headerWrap","headLogo","headContent","__webpack_require__","p","messageWrap","message","angle","profileWrap","avaDiscript","navWrap","navContent","link","navIcon","conversationWrap","usersWrap","getBtn","pagesWrap","selectedPage","innerWrap","userInfoWrap","user","userName","userStatus","location","country","city","initialState","dialogs","id","v1","name","messages","text","newMessageText","instance","axios","create","baseURL","withCredentials","headers","API-KEY","usersAPI","currentPage","pagesSize","get","concat","then","response","data","userID","delete","post","authMe","posts","image","likes","newPostText","profile","InitialState","users","totalUsersCount","isFetching","followingProgress","toggleIsFetching","type","toggleFollowingProgress","email","login","isAuth","rootReducer","combineReducers","profileReducer","state","arguments","length","undefined","action","stateCopy","Object","objectSpread","toConsumableArray","newPost","unshift","newText","dialogsReducer","newMessage","push","usersReducer","map","u","followed","count","filter","auth","store","createStore","applyMiddleware","thunk","Navbar","react_default","a","createElement","className","styles","react_router_dom","to","activeClassName","index_esm","navText","MessageRequest","_ref","MessageResponse","Conversation","newMessageEl","message_MessageResponse","key","message_MessageRequest","DialogLink","Messages","onAddMessage","onNewMessageChangeHandler","dialogsEl","dialog","Messages_DialogLink","conversation_Conversation","value","onChange","placeholder","onClick","size","MessagesContainer","connect","dispatch","el","currentTarget","UsersFC","onPageChanged","unfollow","follow","pagesCount","Math","ceil","pages","i","style","marginLeft","src","photos","small","img","alt","disabled","some","status","PreloaderSVG","viewBox","data-name","d","fill","path8","Users","pageNumber","_this","props","getUsers","this","Fragment","PreloaderSVG_PreloaderSVG","UsersFC_UsersFC","React","Component","UsersContainer","getState","resultCode","followSuccess","unfollowSuccess","setCurrentPage","items","totalCount","Avatar","large","ProfileInfo","fullName","aboutMe","lookingForAJob","Post","ai_index_esm","likesCount","MyPosts","onAddPost","onNewTextChangeHandler","postsEl","post_Post","MyPostsContainer","Profile","avatar_Avatar","profileInfo_ProfileInfo","ProfileContainer","match","params","getUserProfile","components_Profile_Profile","assign","WithUrlDataProfileContainer","withRouter","HeaderFC","href","di_index_esm","logo","Header","getUserData","Header_HeaderFC","HeaderContainer","App","components_Navbar_Navbar","react_router","path","render","Profile_ProfileContainer","ReactDOM","StrictMode","react_redux_es","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.885b1eff.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"messagesWrap\":\"Messages_messagesWrap__2nz78\",\"dialogsInner\":\"Messages_dialogsInner__2GJPn\",\"friendsMessages\":\"Messages_friendsMessages__1aUAf\",\"active\":\"Messages_active__29Eub\",\"messagesLink\":\"Messages_messagesLink__2jVMy\",\"linkTitle\":\"Messages_linkTitle__fjSYB\",\"messagesContent\":\"Messages_messagesContent__AR3ux\",\"messageInput\":\"Messages_messageInput__2fsWP\",\"inputArea\":\"Messages_inputArea__2y7ur\",\"inputBtn\":\"Messages_inputBtn__1TLdz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainFader\":\"PreloaderSVG_mainFader__1igsZ\",\"loader\":\"PreloaderSVG_loader__1oRYk\",\"pulse\":\"PreloaderSVG_pulse__UrCAz\",\"path7\":\"PreloaderSVG_path7__1GDgv\",\"path6\":\"PreloaderSVG_path6__3SMwK\",\"path5\":\"PreloaderSVG_path5__oNd75\",\"path4\":\"PreloaderSVG_path4__1Us6x\",\"path3\":\"PreloaderSVG_path3__5AkEc\",\"path2\":\"PreloaderSVG_path2__hhvwI\",\"path1\":\"PreloaderSVG_path1__2K28F\",\"path0\":\"PreloaderSVG_path0__3FRnn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"infoWrap\":\"ProfileInfo_infoWrap__1Sogx\",\"infoItem\":\"ProfileInfo_infoItem__x1wAk\",\"itemTitle\":\"ProfileInfo_itemTitle__sIu7o\",\"itemDescription\":\"ProfileInfo_itemDescription__1muTk\",\"descriptionText\":\"ProfileInfo_descriptionText__2PDqw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postWrap\":\"Post_postWrap__33QUx\",\"postAutor\":\"Post_postAutor__OPZNZ\",\"postContent\":\"Post_postContent__2wo3j\",\"ava\":\"Post_ava__1tdgG\",\"postText\":\"Post_postText__y2cCX\",\"postLikes\":\"Post_postLikes__3rZc0\",\"likeIcon\":\"Post_likeIcon__34Epz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"avaWrap\":\"Avatar_avaWrap__3tpKP\",\"avaImg\":\"Avatar_avaImg__OYA3s\",\"ava\":\"Avatar_ava__3MD2v\",\"avaSettings\":\"Avatar_avaSettings__1BNE_\",\"avaBtn\":\"Avatar_avaBtn__cpEjP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsWrap\":\"MyPosts_postsWrap__31Cb8\",\"inputPost\":\"MyPosts_inputPost__2BE_Y\",\"inputArea\":\"MyPosts_inputArea__3WVLA\",\"inputBtn\":\"MyPosts_inputBtn__2D68l\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"headerWrap\":\"Header_headerWrap__3-83i\",\"headLogo\":\"Header_headLogo__3TQve\",\"headContent\":\"Header_headContent__3deog\"};","module.exports = __webpack_public_path__ + \"static/media/nonameUser.2a09aa4b.jpg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"messageWrap\":\"MessageRequest_messageWrap__1u85V\",\"message\":\"MessageRequest_message__1i1G-\",\"angle\":\"MessageRequest_angle__24Y4D\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"messageWrap\":\"MessageResponse_messageWrap__1V2Dh\",\"message\":\"MessageResponse_message__7KkQ2\",\"angle\":\"MessageResponse_angle__3pby9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profileWrap\":\"Profile_profileWrap__37dOT\",\"avaDiscript\":\"Profile_avaDiscript__33R9Z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navWrap\":\"Navbar_navWrap__18mrh\",\"navContent\":\"Navbar_navContent__2pfvB\",\"active\":\"Navbar_active__QtVGT\",\"link\":\"Navbar_link__3vOxA\",\"navIcon\":\"Navbar_navIcon__36W5q\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"conversationWrap\":\"Conversation_conversationWrap__39JRi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"usersWrap\":\"Users_usersWrap__e1s2w\",\"getBtn\":\"Users_getBtn__bGW_U\",\"pagesWrap\":\"Users_pagesWrap__1XFtJ\",\"selectedPage\":\"Users_selectedPage__2n7ut\",\"innerWrap\":\"Users_innerWrap__1HFul\",\"avaWrap\":\"Users_avaWrap__rzbwa\",\"avaImg\":\"Users_avaImg__1UWqP\",\"ava\":\"Users_ava__23Qog\",\"avaSettings\":\"Users_avaSettings__3C8js\",\"avaBtn\":\"Users_avaBtn__157ef\",\"userInfoWrap\":\"Users_userInfoWrap__2werw\",\"user\":\"Users_user__16aU1\",\"userName\":\"Users_userName__3B_lJ\",\"userStatus\":\"Users_userStatus__P3CYk\",\"location\":\"Users_location__1pNzC\",\"country\":\"Users_country__16fVl\",\"city\":\"Users_city__2TDNy\"};","import {v1} from 'uuid';\r\nimport {\r\n    AddMessageAT,\r\n    AllActionTypes,\r\n    ChangeNewMessageAT\r\n} from '../redux_store';\r\n\r\nexport type DialogsType = {\r\n    id: string\r\n    name: string\r\n}\r\n\r\nexport type MessageType = {\r\n    id: string\r\n    text: string\r\n}\r\n\r\nexport type InitialDialogsStateType = typeof initialState\r\n\r\nconst initialState = {\r\n    dialogs: [\r\n        {\r\n            id: v1(),\r\n            name: 'Amy Wong'\r\n        },\r\n        {\r\n            id: v1(),\r\n            name: 'Zapp Brannigan'\r\n        },\r\n        {\r\n            id: v1(),\r\n            name: 'John D. Zoidberg'\r\n        },\r\n        {\r\n            id: v1(),\r\n            name: 'Turanga Leela'\r\n        },\r\n        {\r\n            id: v1(),\r\n            name: 'Hubert J. Farnsworth'\r\n        },\r\n    ] as Array<DialogsType>,\r\n    messages: [\r\n        {\r\n            id: v1(),\r\n            text: 'Hi! How are you?'\r\n        },\r\n        {\r\n            id: v1(),\r\n            text: 'Hi! I\\'m fine, thanks!'\r\n        }\r\n    ] as Array<MessageType>,\r\n    newMessageText: ''\r\n}\r\n\r\nexport const dialogsReducer = (state: InitialDialogsStateType = initialState, action: AllActionTypes): InitialDialogsStateType => {\r\n\r\n    switch (action.type) {\r\n        case \"ADD-MESSAGE\": {\r\n            let stateCopy = {...state}\r\n            stateCopy.messages = [...state.messages]\r\n            const newMessage: MessageType = {\r\n                id: v1(),\r\n                text: state.newMessageText\r\n            }\r\n            stateCopy.messages.push(newMessage);\r\n            stateCopy.newMessageText = \"\";\r\n            return stateCopy;\r\n        }\r\n        case \"CHANGE-NEW-MESSAGE\": {\r\n            let stateCopy = {...state}\r\n            stateCopy.newMessageText = action.newMessage;\r\n            return stateCopy;\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n// === ACTION CREATORS ===\r\nexport const addMessage = (): AddMessageAT => {\r\n    return {\r\n        type: \"ADD-MESSAGE\"\r\n    }\r\n}\r\n\r\nexport const changeNewMessage = (newMessage: string): ChangeNewMessageAT => {\r\n    return {\r\n        type: \"CHANGE-NEW-MESSAGE\",\r\n        newMessage: newMessage\r\n    }\r\n}\r\n\r\n// === / ACTION CREATORS ===","import axios from 'axios';\r\n\r\nconst instance = axios.create({\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n    withCredentials: true,\r\n    headers: {\r\n        'API-KEY': '26cd6eda-bc62-4bf5-b3d8-fb025b33cde9'\r\n    }\r\n})\r\n\r\nexport const usersAPI = {\r\n    getUsers (currentPage: number, pagesSize: number) {\r\n        return instance.get(`users?page=${currentPage}&count=${pagesSize}`)\r\n            .then(response => {\r\n                return response.data\r\n            })\r\n    },\r\n    unfollow (userID: number) {\r\n        return instance.delete(`follow/${userID}`)\r\n    },\r\n    follow (userID: number) {\r\n        return instance.post(`follow/${userID}`)\r\n    },\r\n    getProfile (userID: string) {\r\n        return instance.get(`profile/${userID}`)\r\n    }\r\n}\r\n\r\nexport const authMe = {\r\n    getMe () {\r\n        return instance.get(`auth/me`)\r\n    }\r\n}","import {v1} from 'uuid';\r\nimport {\r\n    AddPostAT,\r\n    AllActionTypes,\r\n    ChangeNewTextAT, SetUserProfileAT\r\n} from '../redux_store';\r\nimport {PhotosType} from './users_reducer';\r\nimport {Dispatch} from 'redux';\r\nimport {usersAPI} from '../../api/api';\r\n\r\nexport type UserProfileType = {\r\n    aboutMe: string\r\n    contacts: ContactsType\r\n    lookingForAJob: boolean\r\n    lookingForAJobDescription: string | null\r\n    fullName: string\r\n    userId: number | string\r\n    photos: PhotosType\r\n}\r\n\r\ntype ContactsType = {\r\n    facebook: string | null\r\n    website: string | null\r\n    vk: string | null\r\n    twitter: string | null\r\n    instagram: string | null\r\n    youtube: string | null\r\n    github: string | null\r\n    mainLink: string | null\r\n}\r\n\r\nexport type PostsType = {\r\n    image: string\r\n    id: string\r\n    name: string\r\n    text: string\r\n    likes: number\r\n}\r\n\r\nexport type InitialProfileStateType = typeof initialState\r\n\r\nconst initialState = {\r\n    posts: [\r\n        {\r\n            image: 'https://pbs.twimg.com/profile_images/472509364738072576/dtKZNd1J.jpeg',\r\n            id: v1(),\r\n            name: 'Philip J. Fry',\r\n            text: 'Phew! What a terrible dream I had! I will never sleep again!',\r\n            likes: 12\r\n        },\r\n        {\r\n            image: 'https://i.pinimg.com/736x/bb/4f/45/bb4f4529f8d7d3d60aa6fb3096b94ee6--futurama-why-not.jpg',\r\n            id: v1(),\r\n            name: 'John D. Zoidberg',\r\n            text: 'Whoop! Whoop! Whoop! Whoop! Whoop!',\r\n            likes: 5\r\n        },\r\n        {\r\n            image: 'https://tridigital.wpengine.com/wp-content/uploads/2014/10/Turanga-Leela-Cartoon-Anime.jpg',\r\n            id: v1(),\r\n            name: 'Turanga Leela',\r\n            text: 'Have you run out of idiotic thoughts?',\r\n            likes: 24\r\n        },\r\n    ] as Array<PostsType>,\r\n        newPostText: '',\r\n    profile: {} as UserProfileType\r\n}\r\n\r\n\r\nexport const profileReducer = (state: InitialProfileStateType = initialState, action: AllActionTypes): InitialProfileStateType => {\r\n    switch (action.type){\r\n        case \"ADD-POST\": {\r\n            let stateCopy = {...state}\r\n            stateCopy.posts = [...state.posts]\r\n            const newPost: PostsType = {\r\n                image: 'https://media1.tenor.com/images/9a04b431a9355b4b6295f25cbbcfe547/tenor.gif?itemid=4868772',\r\n                id: v1(),\r\n                name: '%@User_name@%',\r\n                text: state.newPostText,\r\n                likes: 0\r\n            }\r\n            stateCopy.posts.unshift(newPost)\r\n            stateCopy.newPostText = \"\";\r\n            return stateCopy;\r\n        }\r\n        case \"CHANGE-NEW-TEXT\": {\r\n            let stateCopy = {...state}\r\n            stateCopy.newPostText = action.newText;\r\n            return stateCopy;\r\n        }\r\n        case \"SET-USER-PROFILE\": {\r\n            return {...state, profile: action.profile}\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n// === ACTION CREATORS ===\r\nexport const addPostAC = (): AddPostAT => {\r\n    return {\r\n        type: \"ADD-POST\"\r\n    }\r\n}\r\n\r\nexport const changeNewTextAC = (newText: string): ChangeNewTextAT => {\r\n    return {\r\n        type: \"CHANGE-NEW-TEXT\",\r\n        newText: newText\r\n    }\r\n}\r\n\r\nconst setUserProfile = (profile: UserProfileType): SetUserProfileAT => {\r\n    return {\r\n        type: \"SET-USER-PROFILE\",\r\n        profile\r\n    }\r\n}\r\n\r\n// === / ACTION CREATORS ===\r\n\r\n// === THUNKS ===\r\nexport const getUserProfile = (userID: string) => (dispatch: Dispatch<AllActionTypes>) => {\r\n    usersAPI.getProfile(userID).then(response => {\r\n        dispatch(setUserProfile(response.data));\r\n    })\r\n}\r\n\r\n// === / THUNKS ===","import {\r\n    AllActionTypes,\r\n    FollowAT, RootStateType,\r\n    SetCurrentPageAT,\r\n    SetTotalUsersCountAT,\r\n    SetUsersAT, ToggleFollowingProgressAT,\r\n    ToggleIsFetchingAT,\r\n    UnfollowAT\r\n} from '../redux_store';\r\nimport {usersAPI} from '../../api/api';\r\nimport {Dispatch} from 'redux';\r\n\r\nexport type UserType = {\r\n    name: string\r\n    id: number\r\n    uniqueUrlName: null | string\r\n    photos: PhotosType\r\n    status: null | string\r\n    followed: boolean\r\n}\r\n\r\nexport type PhotosType = {\r\n    small: undefined | string\r\n    large: undefined | string\r\n}\r\n\r\nexport type InitialUsersStateType = typeof InitialState\r\n\r\nconst InitialState = {\r\n    users: [] as Array<UserType>,\r\n    pagesSize: 5,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    isFetching: true,\r\n    followingProgress: [] as Array<number>\r\n}\r\n\r\nexport const usersReducer = (state: InitialUsersStateType = InitialState, action: AllActionTypes): InitialUsersStateType => {\r\n    switch (action.type) {\r\n        case 'FOLLOW':\r\n            return {\r\n                ...state, users: state.users.map(u => {\r\n                    if (u.id === action.userID) {\r\n                        return {...u, followed: true}\r\n                    }\r\n                    return u\r\n                })\r\n            }\r\n        case 'UNFOLLOW':\r\n            return {\r\n                ...state, users: state.users.map(u => {\r\n                    if (u.id === action.userID) {\r\n                        return {...u, followed: false}\r\n                    }\r\n                    return u\r\n                })\r\n            }\r\n        case 'SET-USERS':\r\n            return {...state, users: action.users}\r\n        case 'SET-CURRENT-PAGE':\r\n            return {...state, currentPage: action.currentPage}\r\n        case 'SET-TOTAL-USERS-COUNT':\r\n            return {...state, totalUsersCount: action.count}\r\n        case 'TOGGLE-IS-FETCHING':\r\n            return {...state, isFetching: action.isFetching}\r\n        case 'TOGGLE-FOLLOWING-PROGRESS':\r\n            return {\r\n                ...state,\r\n                followingProgress: action.isFetching\r\n                    ? [...state.followingProgress, action.userID]\r\n                    : state.followingProgress.filter(id => id != action.userID)\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n// === ACTION CREATORS ===\r\nconst followSuccess = (userID: number): FollowAT => {\r\n    return {\r\n        type: 'FOLLOW',\r\n        userID: userID\r\n    }\r\n}\r\n\r\nconst unfollowSuccess = (userID: number): UnfollowAT => {\r\n    return {\r\n        type: 'UNFOLLOW',\r\n        userID: userID\r\n    }\r\n}\r\n\r\nconst setUsers = (users: Array<UserType>): SetUsersAT => {\r\n    return {\r\n        type: 'SET-USERS',\r\n        users\r\n    }\r\n}\r\n\r\nconst setCurrentPage = (currentPage: number): SetCurrentPageAT => {\r\n    return {\r\n        type: 'SET-CURRENT-PAGE',\r\n        currentPage\r\n    }\r\n}\r\n\r\nconst setTotalUsersCount = (count: number): SetTotalUsersCountAT => {\r\n    return {\r\n        type: 'SET-TOTAL-USERS-COUNT',\r\n        count\r\n    }\r\n}\r\n\r\nconst toggleIsFetching = (isFetching: boolean): ToggleIsFetchingAT => {\r\n    return {\r\n        type: 'TOGGLE-IS-FETCHING',\r\n        isFetching\r\n    }\r\n}\r\n\r\nconst toggleFollowingProgress = (isFetching: boolean, userID: number): ToggleFollowingProgressAT => {\r\n    return {\r\n        type: 'TOGGLE-FOLLOWING-PROGRESS',\r\n        isFetching,\r\n        userID\r\n    }\r\n}\r\n\r\n// === / ACTION CREATORS ===\r\n\r\n// === THUNKS ===\r\nexport const getUsers = (currentPage: number, pagesSize: number) => {\r\n    return (dispatch: Dispatch<AllActionTypes>, getState: () => RootStateType) => {\r\n        dispatch(setCurrentPage(currentPage))\r\n        dispatch(toggleIsFetching(true))\r\n        usersAPI.getUsers(currentPage, pagesSize).then(data => {\r\n            dispatch(toggleIsFetching(false))\r\n            dispatch(setUsers(data.items));\r\n            dispatch(setTotalUsersCount(data.totalCount));\r\n        })\r\n    }\r\n}\r\n\r\nexport const follow = (userID: number) => {\r\n    return (dispatch: Dispatch<AllActionTypes>, getState: () => RootStateType) => {\r\n        dispatch(toggleFollowingProgress(true, userID))\r\n        usersAPI.follow(userID).then(response => {\r\n            if (response.data.resultCode == 0) {\r\n                dispatch(followSuccess(userID))\r\n            }\r\n            dispatch(toggleFollowingProgress(false, userID))\r\n        })\r\n    }\r\n}\r\n\r\nexport const unfollow = (userID: number) => {\r\n    return (dispatch: Dispatch<AllActionTypes>, getState: () => RootStateType) => {\r\n        dispatch(toggleFollowingProgress(true, userID))\r\n        usersAPI.unfollow(userID).then(response => {\r\n            if (response.data.resultCode == 0) {\r\n                dispatch(unfollowSuccess(userID))\r\n            }\r\n            dispatch(toggleFollowingProgress(false, userID))\r\n        })\r\n    }\r\n}\r\n\r\n// === / THUNKS ===\r\n","import {\r\n    AllActionTypes,\r\n    SetUserDataAT\r\n} from '../redux_store';\r\nimport {Dispatch} from 'redux';\r\nimport {authMe} from '../../api/api';\r\n\r\nexport type InitialAuthStateType = {\r\n    id: null | number,\r\n    email: null | string,\r\n    login: null | string,\r\n    isAuth: boolean\r\n}\r\n\r\nconst InitialState = {\r\n    id: null,\r\n    email: null,\r\n    login: null,\r\n    isAuth: false\r\n}\r\n\r\nexport const authReducer = (state: InitialAuthStateType = InitialState, action: AllActionTypes): InitialAuthStateType => {\r\n    switch (action.type) {\r\n        case 'SET-USER-DATA':\r\n            return {\r\n                ...state,\r\n                ...action.data,\r\n                isAuth: true\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n// === ACTION CREATORS ===\r\nconst setUserData = (data: InitialAuthStateType): SetUserDataAT => {\r\n    return {\r\n        type: \"SET-USER-DATA\",\r\n        data\r\n    }\r\n}\r\n\r\n// === / ACTION CREATORS ===\r\n\r\n// === THUNKS ===\r\nexport const getUserData = () => (dispatch: Dispatch<AllActionTypes>) => {\r\n    authMe.getMe().then(response => {\r\n        if (response.data.resultCode == 0) {\r\n            dispatch(setUserData(response.data.data))\r\n        }\r\n    })\r\n}\r\n\r\n// === / THUNKS ===\r\n","import {combineReducers, createStore } from \"redux\";\r\nimport {dialogsReducer} from './reducers/dialogs_reducer';\r\nimport {profileReducer, UserProfileType} from './reducers/profile_reducer';\r\nimport {usersReducer, UserType} from './reducers/users_reducer';\r\nimport {authReducer} from './reducers/auth_reducer';\r\nimport { applyMiddleware } from \"redux\";\r\nimport thunk from 'redux-thunk';\r\n\r\nconst rootReducer = combineReducers({\r\n    profileReducer,\r\n    dialogsReducer,\r\n    usersReducer,\r\n    auth: authReducer\r\n})\r\n\r\nexport type RootStateType = ReturnType<typeof rootReducer>\r\n\r\n// === ACTION TYPES ===\r\nexport type AllActionTypes = AddPostAT\r\n    | ChangeNewTextAT\r\n    | AddMessageAT\r\n    | ChangeNewMessageAT\r\n    | FollowAT\r\n    | UnfollowAT\r\n    | SetUsersAT\r\n    | SetCurrentPageAT\r\n    | SetTotalUsersCountAT\r\n    | ToggleIsFetchingAT\r\n    | ToggleFollowingProgressAT\r\n    | SetUserProfileAT\r\n    | SetUserDataAT\r\n\r\nexport type AddPostAT = {\r\n    type: 'ADD-POST'\r\n}\r\n\r\nexport type ChangeNewTextAT = {\r\n    type: 'CHANGE-NEW-TEXT'\r\n    newText: string\r\n}\r\n\r\nexport type AddMessageAT = {\r\n    type: 'ADD-MESSAGE'\r\n}\r\n\r\nexport type ChangeNewMessageAT = {\r\n    type: 'CHANGE-NEW-MESSAGE'\r\n    newMessage: string\r\n}\r\n\r\nexport type FollowAT = {\r\n    type: 'FOLLOW'\r\n    userID: number\r\n}\r\n\r\nexport type UnfollowAT = {\r\n    type: 'UNFOLLOW'\r\n    userID: number\r\n}\r\n\r\nexport type SetUsersAT = {\r\n    type: 'SET-USERS'\r\n    users: Array<UserType>\r\n}\r\n\r\nexport type SetCurrentPageAT = {\r\n    type: 'SET-CURRENT-PAGE'\r\n    currentPage: number\r\n}\r\n\r\nexport type SetTotalUsersCountAT = {\r\n    type: 'SET-TOTAL-USERS-COUNT'\r\n    count: number\r\n}\r\n\r\nexport type ToggleIsFetchingAT = {\r\n    type: 'TOGGLE-IS-FETCHING'\r\n    isFetching: boolean\r\n}\r\n\r\nexport type ToggleFollowingProgressAT = {\r\n    type: 'TOGGLE-FOLLOWING-PROGRESS'\r\n    isFetching: boolean\r\n    userID: number\r\n}\r\n\r\nexport type SetUserProfileAT = {\r\n    type: \"SET-USER-PROFILE\"\r\n    profile: UserProfileType\r\n}\r\n\r\nexport type SetUserDataAT = {\r\n    type: \"SET-USER-DATA\",\r\n    data: {\r\n        id: null | number,\r\n        email: null | string,\r\n        login: null | string\r\n    }\r\n}\r\n// === / ACTION TYPES ===\r\n\r\nexport const store = createStore(rootReducer, applyMiddleware(thunk));\r\n","import React from 'react';\r\nimport styles from './Navbar.module.scss';\r\nimport { BsFillGrid1X2Fill, BsFillChatFill,\r\n    BsPeopleFill, BsFillExclamationSquareFill } from \"react-icons/bs\";\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst Navbar: React.FC = () => {\r\n    return (\r\n        <section className={styles.navWrap}>\r\n            <div className={styles.navContent}>\r\n                <NavLink to=\"/profile\" className={styles.link} activeClassName={styles.active}>\r\n                    <BsFillGrid1X2Fill className={styles.navIcon}/>\r\n                    <div  className={styles.navText}>\r\n                        Profile\r\n                    </div>\r\n                </NavLink>\r\n                <NavLink to=\"/messages\" className={styles.link} activeClassName={styles.active}>\r\n                    <BsFillChatFill className={styles.navIcon}/>\r\n                    <div className={styles.navText}>\r\n                        Messages\r\n                    </div>\r\n                </NavLink>\r\n                <NavLink to=\"/friends\" className={styles.link} activeClassName={styles.active}>\r\n                    <BsPeopleFill className={styles.navIcon}/>\r\n                    <div className={styles.navText}>\r\n                        Friends\r\n                    </div>\r\n                </NavLink>\r\n                <NavLink to=\"/news\" className={styles.link} activeClassName={styles.active}>\r\n                    <BsFillExclamationSquareFill className={styles.navIcon}/>\r\n                    <div className={styles.navText}>\r\n                        News\r\n                    </div>\r\n                </NavLink>\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default Navbar;","import React from 'react';\r\nimport styles from './MessageRequest.module.scss';\r\n\r\ntype MessageRequestPropsType = {\r\n    message: string\r\n}\r\n\r\nconst MessageRequest: React.FC<MessageRequestPropsType> = ({message}) => {\r\n    return (\r\n        <section className={styles.messageWrap}>\r\n            <div className={styles.angle}/>\r\n            <div className={styles.message}>\r\n                {message}\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default MessageRequest;","import React from 'react';\r\nimport styles from './MessageResponse.module.scss';\r\n\r\ntype MessageResponsePropsType = {\r\n    message: string\r\n}\r\n\r\nconst MessageResponse: React.FC<MessageResponsePropsType> = ({message}) => {\r\n    return (\r\n        <section className={styles.messageWrap}>\r\n            <div className={styles.message}>\r\n                {message}\r\n            </div>\r\n            <div className={styles.angle}/>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default MessageResponse;","import React from 'react';\r\nimport styles from './Conversation.module.scss';\r\nimport MessageRequest from '../message/MessageRequest';\r\nimport MessageResponse from '../message/MessageResponse';\r\nimport {MessageType} from '../../../state/reducers/dialogs_reducer';\r\n\r\ntype ConversationType = {\r\n    message: Array<MessageType>\r\n}\r\n\r\nconst Conversation: React.FC<ConversationType> = ({message}) => {\r\n\r\n    const newMessageEl = message.map((message:MessageType) => <MessageResponse key={message.id}\r\n                                                                                     message={message.text}/>)\r\n\r\n    return (\r\n        <section className={styles.conversationWrap}>\r\n            <MessageRequest message={message[0].text}/>\r\n            {newMessageEl}\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default Conversation;","import {NavLink} from 'react-router-dom';\r\nimport styles from './Messages.module.scss';\r\nimport React from 'react';\r\n\r\ntype DialogsLinkPropsType = {\r\n    id: string\r\n    name: string\r\n}\r\n\r\nconst DialogLink: React.FC<DialogsLinkPropsType> = ({name,\r\n                                                        id}) => {\r\n    return (\r\n        <NavLink to={'/messages/conversation/' + id}\r\n                 className={styles.messagesLink}\r\n                 activeClassName={styles.active}\r\n        >\r\n            <div className={styles.linkTitle}>{name}</div>\r\n        </NavLink>\r\n    )\r\n}\r\n\r\nexport default DialogLink;\r\n\r\n","import React, {ChangeEvent} from 'react';\r\nimport styles from './Messages.module.scss'\r\nimport {BsBoxArrowInUp} from 'react-icons/bs';\r\nimport Conversation from './conversation/Conversation';\r\nimport DialogLink from './DialogLink';\r\nimport {DialogsType} from '../../state/reducers/dialogs_reducer';\r\nimport {MessagesPropsType} from './MessagesContainer';\r\n\r\nconst Messages: React.FC<MessagesPropsType> = ({dialogs,\r\n                                                   messages,\r\n                                                   newMessage,\r\n                                                   onAddMessage,\r\n                                                   onNewMessageChangeHandler} ) => {\r\n\r\n    let dialogsEl = dialogs.map((dialog: DialogsType) => <DialogLink key={dialog.id}\r\n                                                                           id={dialog.id}\r\n                                                                           name={dialog.name}/>)\r\n\r\n    const newMessageChangeHandler = (text: ChangeEvent<HTMLInputElement>) => onNewMessageChangeHandler(text)\r\n\r\n    return (\r\n        <section className={styles.messagesWrap}>\r\n            <div className={styles.dialogsInner}>\r\n                <div className={styles.friendsMessages}>\r\n                    {dialogsEl}\r\n                </div>\r\n                <div className={styles.messagesContent}>\r\n                    <Conversation message={messages}/>\r\n                </div>\r\n            </div>\r\n            <div className={styles.messageInput}>\r\n                <div className={styles.inputArea}>\r\n                    <input type=\"text\"\r\n                           value={newMessage}\r\n                           onChange={newMessageChangeHandler}\r\n                           placeholder=\"Enter your message\"\r\n                    />\r\n                </div>\r\n                <BsBoxArrowInUp onClick={onAddMessage} //React.DOMAttributes<T>.onClick?: React.MouseEventHandler<SVGElement>\r\n                                className={styles.inputBtn}\r\n                                size=\"2em\"\r\n                />\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default Messages;","import {ChangeEvent} from 'react';\r\nimport {\r\n    addMessage,\r\n    changeNewMessage,\r\n    DialogsType,\r\n    MessageType\r\n} from '../../state/reducers/dialogs_reducer';\r\nimport Messages from './Messages';\r\nimport {connect} from 'react-redux';\r\nimport {RootStateType} from '../../state/redux_store';\r\nimport {Dispatch} from 'redux';\r\n\r\ntype MapStatePropsType = {\r\n    newMessage: string\r\n    dialogs: Array<DialogsType>\r\n    messages: Array<MessageType>\r\n}\r\n\r\ntype MapDispatchPropsType = {\r\n    onAddMessage: () => void\r\n    onNewMessageChangeHandler: (el: ChangeEvent<HTMLInputElement>) => void\r\n}\r\n\r\nexport type MessagesPropsType = MapStatePropsType & MapDispatchPropsType\r\n\r\nlet mapStateToProps = (state: RootStateType): MapStatePropsType => {\r\n    return {\r\n        newMessage: state.dialogsReducer.newMessageText,\r\n        dialogs: state.dialogsReducer.dialogs,\r\n        messages: state.dialogsReducer.messages\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch: Dispatch): MapDispatchPropsType => {\r\n    return {\r\n        onAddMessage: () => {\r\n            dispatch(addMessage())\r\n        },\r\n        onNewMessageChangeHandler: (el: ChangeEvent<HTMLInputElement>) => {\r\n            dispatch(changeNewMessage(el.currentTarget.value))\r\n        }\r\n    }\r\n}\r\n\r\nexport const MessagesContainer = connect<MapStatePropsType, MapDispatchPropsType, {}, RootStateType>(mapStateToProps, mapDispatchToProps)(Messages);\r\n\r\n","import React from 'react';\r\nimport styles from './Users.module.scss';\r\nimport img from './images/nonameUser.jpg';\r\nimport {UserType} from '../../state/reducers/users_reducer';\r\nimport {NavLink} from 'react-router-dom';\r\n\r\ntype UsersFCPropsType = {\r\n    users: Array<UserType>\r\n    pagesSize: number\r\n    totalUsersCount: number\r\n    currentPage: number\r\n    follow: (userID: number) => void\r\n    unfollow: (userID: number) => void\r\n    onPageChanged: (pageNumber: number) => void\r\n    followingProgress: Array<number>\r\n}\r\n\r\nexport const UsersFC: React.FC<UsersFCPropsType> = ({\r\n                                                        users,\r\n                                                        totalUsersCount,\r\n                                                        currentPage,\r\n                                                        pagesSize,\r\n                                                        onPageChanged,\r\n                                                        unfollow,\r\n                                                        follow,\r\n                                                        followingProgress\r\n                                                    }) => {\r\n\r\n    let pagesCount = Math.ceil(totalUsersCount / pagesSize)\r\n\r\n    let pages = []\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i)\r\n    }\r\n\r\n    return (\r\n        <section className={styles.usersWrap}>\r\n            <div className={styles.pagesWrap}>\r\n                {pages.map(p => {\r\n                    return <span style={{marginLeft: '5px'}}\r\n                                 className={currentPage === p ? styles.selectedPage : ''}\r\n                                 onClick={() => onPageChanged(p)}>{p}</span>\r\n                })}\r\n            </div>\r\n            {\r\n                users.map(u => (\r\n                    <section key={u.id}\r\n                             className={styles.innerWrap}>\r\n                        <div className={styles.avaWrap}>\r\n                            <NavLink to={'/profile/' + u.id}>\r\n                                <div className={styles.avaImg}>\r\n                                    <img className={styles.ava}\r\n                                         src={u.photos.small === null ? img : u.photos.small}\r\n                                         alt=\"Avatar\"\r\n                                    />\r\n                                </div>\r\n                            </NavLink>\r\n                            <div className={styles.avaSettings}>\r\n                                {u.followed\r\n                                    ? <button className={styles.avaBtn}\r\n                                              disabled={followingProgress.some(id => id === u.id)}\r\n                                              onClick={() => {unfollow(u.id)}}>Unfollow</button>\r\n                                    : <button className={styles.avaBtn}\r\n                                              disabled={followingProgress.some(id => id === u.id)}\r\n                                              onClick={() => {follow(u.id)}}>Follow</button>}\r\n                            </div>\r\n                        </div>\r\n                        <div className={styles.userInfoWrap}>\r\n                            <div className={styles.user}>\r\n                                <div className={styles.userName}>\r\n                                    {u.name}\r\n                                </div>\r\n                                <div className={styles.userStatus}>\r\n                                    &#8220;{u.status}&#8221;\r\n                                </div>\r\n                            </div>\r\n                            <div className={styles.location}>\r\n                                <div className={styles.country}>\r\n                                    country\r\n                                </div>\r\n                                <div className={styles.city}>\r\n                                    city\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </section>\r\n                ))\r\n            }\r\n        </section>\r\n    )\r\n}","import React from 'react';\r\nimport styles from './PreloaderSVG.module.scss'\r\n\r\nexport const PreloaderSVG = () => {\r\n    return (\r\n        <div className={styles.mainFader}>\r\n            <div className={styles.loader}>\r\n                <svg viewBox=\"0 0 866 866\">\r\n                    <svg id=\"Layer_1\" data-name=\"Layer 1\" viewBox=\"0 0 164.83 151.5\">\r\n                        <path className={styles.path0}\r\n                              d=\"M117.24,69.24A8,8,0,0,0,115.67,67c-4.88-4-9.8-7.89-14.86-11.62A4.93,4.93,0,0,0,96.93,55c-5.76,1.89-11.4,4.17-17.18,6a4.36,4.36,0,0,0-3.42,4.12c-1,6.89-2.1,13.76-3,20.66a4,4,0,0,0,1,3.07c5.12,4.36,10.39,8.61,15.68,12.76a3.62,3.62,0,0,0,2.92.75c6.29-2.66,12.52-5.47,18.71-8.36a3.49,3.49,0,0,0,1.68-2.19c1.34-7.25,2.54-14.55,3.9-22.58Z\"\r\n                              fill=\"#40c456\"/>\r\n                        <path className={styles.path1}\r\n                              d=\"M97.55,38.68A43.76,43.76,0,0,1,98,33.44c.41-2.36-.5-3.57-2.57-4.64C91.1,26.59,87,24,82.66,21.82a6.18,6.18,0,0,0-4-.71C73.45,22.55,68.32,24.25,63.22,26c-3.63,1.21-6.08,3.35-5.76,7.69a26.67,26.67,0,0,1-.6,4.92c-1.08,8.06-1.08,8.08,5.86,11.92,3.95,2.19,7.82,5.75,11.94,6.08s8.76-2.41,13.12-3.93c9.33-3.29,9.33-3.3,9.78-14Z\"\r\n                              fill=\"#40c456\"/>\r\n                        <path className={styles.path2}\r\n                              d=\"M66.11,126.56c5.91-.91,11.37-1.7,16.81-2.71a3.3,3.3,0,0,0,1.87-2.17c1-4.06,1.73-8.19,2.84-12.24.54-2-.11-3-1.55-4.15-5-4-9.9-8.12-15-12a6.19,6.19,0,0,0-4.15-1.1c-5.35.66-10.7,1.54-16,2.54A4,4,0,0,0,48.34,97a109.13,109.13,0,0,0-3,12.19,4.47,4.47,0,0,0,1.34,3.6c5.54,4.36,11.23,8.53,16.91,12.69a10.84,10.84,0,0,0,2.57,1.11Z\"\r\n                              fill=\"#40c456\"/>\r\n                        <path className={styles.path3}\r\n                              d=\"M127.42,104.12c4.1-2.1,8-3.93,11.72-6a6,6,0,0,0,2.27-3,58.22,58.22,0,0,0,3.18-29.92c-.26-1.7-8-7.28-9.71-6.85A5,5,0,0,0,133,59.65c-2.81,2.49-5.71,4.88-8.33,7.56a9.46,9.46,0,0,0-2.47,4.4c-1.29,6.49-2.38,13-3.35,19.55a5.73,5.73,0,0,0,.83,3.91c2.31,3.08,5,5.88,7.7,9Z\"\r\n                              fill=\"#40c456\"/>\r\n                        <path className={styles.path4}\r\n                              d=\"M52.58,29.89c-2.15-.36-3.78-.54-5.39-.9-2.83-.64-4.92.1-7,2.32A64.1,64.1,0,0,0,26.09,54.64c-2.64,7.92-2.62,7.84,5.15,10.87,1.76.69,2.73.45,3.93-1C39.79,59,44.54,53.65,49.22,48.2a4.2,4.2,0,0,0,1.13-2c.8-5.32,1.49-10.68,2.24-16.34Z\"\r\n                              fill=\"#40c456\"/>\r\n                        <path className={styles.path5} fill=\"#40c456\"\r\n                              d=\"M23,68.13c0,2.51,0,4.7,0,6.87a60.49,60.49,0,0,0,9.75,32.15c1.37,2.13,6.4,3,7,1.2,1.55-5,2.68-10.2,3.82-15.34.13-.58-.58-1.38-.94-2.06-2.51-4.77-5.47-9.38-7.45-14.37C32.94,71,28.22,69.84,23,68.13Z\"/>\r\n                        <path className={styles.path6} fill=\"#40c456\"\r\n                              d=\"M83.91,12.86c-.32.36-.66.71-1,1.07.9,1.13,1.57,2.62,2.73,3.33,4.71,2.84,9.56,5.48,14.39,8.1a9.29,9.29,0,0,0,3.13.83c5.45.69,10.89,1.38,16.35,1.94a10.41,10.41,0,0,0,3.07-.71c-11.48-9.9-24.26-14.61-38.71-14.56Z\"\r\n                        />\r\n                        <path className={styles.path7} fill=\"#40c456\"\r\n                              d=\"M66.28,132.51c13.36,3.78,25.62,3.5,38-.9C91.68,129.59,79.36,128,66.28,132.51Z\"/>\r\n                        <path className={styles.path8} fill=\"#40c456\"\r\n                              d=\"M127.2,30.66l-1.27.37a18.58,18.58,0,0,0,1,3.08c3,5.52,6.21,10.89,8.89,16.54,1.34,2.83,3.41,3.82,6.49,4.9a60.38,60.38,0,0,0-15.12-24.9Z\"/>\r\n                        <path className=\"bb-9\" fill=\"#40c456\"\r\n                              d=\"M117.35,125c5.58-2.32,16.9-13.84,18.1-19.2-2.41,1.46-5.18,2.36-6.78,4.23-4.21,5-7.89,10.37-11.32,15Z\"/>\r\n                    </svg>\r\n                </svg>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {RootStateType} from '../../state/redux_store';\r\nimport {\r\n    follow,\r\n    getUsers,\r\n    unfollow,\r\n    UserType\r\n} from '../../state/reducers/users_reducer';\r\nimport {UsersFC} from './UsersFC';\r\nimport {PreloaderSVG} from '../../common/Preloader/PreloaderSVG';\r\n\r\ntype MapStatePropsType = {\r\n    users: Array<UserType>\r\n    pagesSize: number\r\n    totalUsersCount: number\r\n    currentPage: number\r\n    isFetching: boolean\r\n    followingProgress: Array<number>\r\n}\r\n\r\ntype MapDispatchPropsType = {\r\n    follow: (userID: number) => void\r\n    unfollow: (userID: number) => void\r\n    getUsers: (currentPage: number, pagesSize: number) => void\r\n}\r\n\r\ntype UsersPropsType = MapStatePropsType & MapDispatchPropsType\r\n\r\nclass Users extends React.Component<UsersPropsType> {\r\n\r\n    componentDidMount() {\r\n        this.props.getUsers(this.props.currentPage, this.props.pagesSize)\r\n    }\r\n\r\n    onPageChanged = (pageNumber: number) => {\r\n        this.props.getUsers(pageNumber, this.props.pagesSize)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                {this.props.isFetching ? <PreloaderSVG/> : null}\r\n                <UsersFC users={this.props.users}\r\n                         pagesSize={this.props.pagesSize}\r\n                         totalUsersCount={this.props.totalUsersCount}\r\n                         currentPage={this.props.currentPage}\r\n                         follow={this.props.follow}\r\n                         unfollow={this.props.unfollow}\r\n                         onPageChanged={this.onPageChanged}\r\n                         followingProgress={this.props.followingProgress}\r\n                />\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state: RootStateType): MapStatePropsType => {\r\n    return ({\r\n        users: state.usersReducer.users,\r\n        pagesSize: state.usersReducer.pagesSize,\r\n        totalUsersCount: state.usersReducer.totalUsersCount,\r\n        currentPage: state.usersReducer.currentPage,\r\n        isFetching: state.usersReducer.isFetching,\r\n        followingProgress: state.usersReducer.followingProgress\r\n    })\r\n}\r\n\r\nexport const UsersContainer = connect<MapStatePropsType, MapDispatchPropsType, {}, RootStateType>(mapStateToProps, {\r\n    follow,\r\n    unfollow,\r\n    getUsers\r\n})(Users)","import React from 'react';\r\nimport styles from './Avatar.module.scss';\r\nimport img from '../../Users/images/nonameUser.jpg';\r\nimport {PhotosType} from '../../../state/reducers/users_reducer';\r\n\r\ntype AvatarPropsType = {\r\n    photos: PhotosType\r\n}\r\n\r\nconst Avatar: React.FC<AvatarPropsType> = ({photos}) => {\r\n    return (\r\n        <section className={styles.avaWrap}>\r\n            <div className={styles.avaImg}>\r\n                <img className={styles.ava} src={photos.large === null ? img : photos.large} alt=\"Avatar\"/>\r\n            </div>\r\n            <div className={styles.avaSettings}>\r\n                <button className={styles.avaBtn}>\r\n                    Edit\r\n                </button>\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default Avatar;","import React from 'react';\r\nimport styles from './ProfileInfo.module.scss';\r\nimport {UserProfileType} from '../../../state/reducers/profile_reducer';\r\nimport {BsFillExclamationCircleFill} from \"react-icons/bs\";\r\n\r\ntype ProfileInfoPropsType = {\r\n    profile: UserProfileType\r\n}\r\n\r\nconst ProfileInfo: React.FC<ProfileInfoPropsType> = ({profile}) => {\r\n    return (\r\n        <section className={styles.infoWrap}>\r\n            <div className={styles.infoItem}>\r\n                <div className={styles.itemTitle}>\r\n                    Name\r\n                </div>\r\n                <div className={styles.itemDescription}>\r\n                    {profile.fullName}\r\n                </div>\r\n            </div>\r\n            <div className={styles.infoItem}>\r\n                <div className={styles.itemTitle}>\r\n                    About me\r\n                </div>\r\n                <div className={styles.itemDescription}>\r\n                    \"{profile.aboutMe}\"\r\n                </div>\r\n            </div>\r\n            <div className={styles.infoItem}>\r\n                <div className={styles.itemTitle}>\r\n                    Looking for a job\r\n                </div>\r\n                <div className={styles.itemDescription}>\r\n                    {profile.lookingForAJob ? <BsFillExclamationCircleFill/> : \"\"}\r\n                </div>\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default ProfileInfo;","import React from 'react';\r\nimport styles from './Post.module.scss';\r\nimport img from './img/ghML0mY_.jpg';\r\nimport { AiFillLike } from \"react-icons/ai\";\r\n\r\ntype PostType = {\r\n    name: string\r\n    text: string\r\n    likes: number\r\n    image: string\r\n}\r\n\r\nconst Post: React.FC<PostType> = ({name,\r\n                                      text,\r\n                                      likes,\r\n                                      image}) => {\r\n    return (\r\n        <section className={styles.postWrap}>\r\n            <div className={styles.postAutor}>\r\n                {name}\r\n            </div>\r\n            <div className={styles.postContent}>\r\n                <div className={styles.ava}>\r\n                    <img src={image} alt=\"Avatar\"/>\r\n                </div>\r\n                <div className={styles.postText}>\r\n                    &#8220;{text}&#8221;\r\n                </div>\r\n            </div>\r\n            <div className={styles.postLikes}>\r\n                <AiFillLike className={styles.likeIcon}/>\r\n                <div className={styles.likesCount}>\r\n                    {likes}\r\n                </div>\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default Post;","import React, {ChangeEvent} from 'react';\r\nimport styles from './MyPosts.module.scss'\r\nimport {BsBoxArrowInDown} from 'react-icons/bs';\r\nimport Post from './post/Post';\r\nimport {MyPostsPropsType} from './MyPostsContainer';\r\n\r\nconst MyPosts: React.FC<MyPostsPropsType> = ({\r\n                                                 posts,\r\n                                                 newPost,\r\n                                                 onAddPost,\r\n                                                 onNewTextChangeHandler\r\n                                             }) => {\r\n\r\n    let postsEl = posts.map((post) => <Post key={post.id}\r\n                                            name={post.name}\r\n                                            text={post.text}\r\n                                            likes={post.likes}\r\n                                            image={post.image}/>)\r\n\r\n    const onPostChange = (text: ChangeEvent<HTMLInputElement>) => {\r\n        onNewTextChangeHandler(text)\r\n    }\r\n\r\n    return (\r\n        <section className={styles.postsWrap}>\r\n            <div className={styles.inputPost}>\r\n                <div className={styles.inputArea}>\r\n                    <input type=\"text\"\r\n                           value={newPost}\r\n                           onChange={onPostChange}\r\n                           placeholder=\"Enter your message\"\r\n                    />\r\n                </div>\r\n                <BsBoxArrowInDown onClick={onAddPost}\r\n                                  className={styles.inputBtn}\r\n                                  size=\"2em\"\r\n                />\r\n            </div>\r\n            {postsEl}\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default MyPosts;\r\n","import {ChangeEvent} from 'react';\r\nimport {\r\n    addPostAC,\r\n    changeNewTextAC,\r\n    PostsType\r\n} from '../../../state/reducers/profile_reducer';\r\nimport MyPosts from './MyPosts';\r\nimport {RootStateType} from '../../../state/redux_store';\r\nimport {connect} from 'react-redux';\r\nimport {Dispatch} from 'redux';\r\n\r\ntype MapStatePropsType = {\r\n    posts: Array<PostsType>\r\n    newPost: string\r\n}\r\n\r\ntype MapDispatchPropsType = {\r\n    onAddPost: () => void\r\n    onNewTextChangeHandler: (el: ChangeEvent<HTMLInputElement>) => void\r\n}\r\n\r\nexport type MyPostsPropsType = MapStatePropsType & MapDispatchPropsType\r\n\r\nlet mapStateToProps = (state: RootStateType): MapStatePropsType => {\r\n    return {\r\n        posts: state.profileReducer.posts,\r\n        newPost: state.profileReducer.newPostText\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch: Dispatch): MapDispatchPropsType => {\r\n    return {\r\n        onAddPost: () => {\r\n            dispatch(addPostAC())\r\n        },\r\n        onNewTextChangeHandler: (el: ChangeEvent<HTMLInputElement>) => {\r\n            dispatch(changeNewTextAC(el.currentTarget.value))\r\n        }\r\n    }\r\n}\r\n\r\nexport const MyPostsContainer = connect (mapStateToProps, mapDispatchToProps)(MyPosts)","import React from 'react';\r\nimport styles from './Profile.module.scss'\r\nimport Avatar from './avatar/Avatar';\r\nimport ProfileInfo from './profileInfo/ProfileInfo';\r\nimport {MyPostsContainer} from './posts/MyPostsContainer';\r\nimport {UserProfileType} from '../../state/reducers/profile_reducer';\r\nimport {PreloaderSVG} from '../../common/Preloader/PreloaderSVG';\r\n\r\ntype ProfilePropsType = {\r\n    profile: UserProfileType\r\n}\r\n\r\nconst Profile: React.FC<ProfilePropsType> = ({profile}) => {\r\n\r\n    if (!profile.photos) {\r\n        return <PreloaderSVG/>\r\n    }\r\n\r\n    return (\r\n        <section className={styles.profileWrap}>\r\n          <div className={styles.avaDiscript}>\r\n              <Avatar photos={profile.photos}/>\r\n              <ProfileInfo profile={profile}/>\r\n          </div>\r\n            <MyPostsContainer />\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default Profile;","import React from 'react';\r\nimport Profile from './Profile';\r\nimport {connect} from 'react-redux';\r\nimport {getUserProfile, UserProfileType} from '../../state/reducers/profile_reducer';\r\nimport {RootStateType} from '../../state/redux_store';\r\nimport {RouteComponentProps, withRouter} from 'react-router-dom';\r\n\r\ntype MapStateToPropsType = {\r\n    profile: UserProfileType\r\n}\r\n\r\ntype MapDispatchToPropsType = {\r\n    getUserProfile: (userID: string) => void\r\n}\r\n\r\ntype PathParamsType = {\r\n    userID: string\r\n}\r\n\r\ntype PropsType = RouteComponentProps<PathParamsType> & ProfileContainerPropsType\r\nexport type ProfileContainerPropsType = MapStateToPropsType & MapDispatchToPropsType\r\n\r\nclass ProfileContainer extends React.Component<PropsType> {\r\n\r\n    componentDidMount() {\r\n        let userID = this.props.match.params.userID\r\n        if (!userID) {\r\n            userID = '2'\r\n        }\r\n        this.props.getUserProfile(userID)\r\n    }\r\n\r\n    render() {\r\n        return <Profile {...this.props} profile={this.props.profile}/>\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state: RootStateType): MapStateToPropsType => {\r\n    return ({\r\n        profile: state.profileReducer.profile\r\n    })\r\n}\r\n\r\nlet WithUrlDataProfileContainer = withRouter(ProfileContainer)\r\n\r\nexport default connect<MapStateToPropsType, MapDispatchToPropsType, {}, RootStateType>(mapStateToProps, {getUserProfile})(WithUrlDataProfileContainer)","import React from 'react';\r\nimport styles from './Header.module.scss';\r\nimport {DiLinux} from 'react-icons/di';\r\nimport {NavLink} from 'react-router-dom';\r\n\r\ntype HeaderFCPropsType = {\r\n    isAuth: boolean,\r\n    login: null | string\r\n}\r\n\r\nconst HeaderFC: React.FC<HeaderFCPropsType> = ({\r\n                                                   isAuth,\r\n                                                   login\r\n                                               }) => {\r\n    return (\r\n        <header className={styles.headerWrap}>\r\n            <a href=\"#\" className={styles.headLogo}>\r\n                <DiLinux className={styles.logo} size=\"2em\"/>\r\n            </a>\r\n            <div className={styles.headContent}>\r\n                {isAuth ? login : <NavLink to={'/login'}>Login</NavLink>}\r\n            </div>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default HeaderFC;","import React from 'react';\r\nimport HeaderFC from './HeaderFC';\r\nimport {connect} from 'react-redux';\r\nimport {RootStateType} from '../../state/redux_store';\r\nimport {getUserData} from '../../state/reducers/auth_reducer';\r\n\r\ntype MapStatePropsType = {\r\n    isAuth: boolean,\r\n    login: null | string\r\n}\r\n\r\ntype MapDispatchPropsType = {\r\n    getUserData: () => void\r\n}\r\n\r\ntype HeaderPropsType = MapStatePropsType & MapDispatchPropsType\r\n\r\nclass Header extends React.Component<HeaderPropsType> {\r\n\r\n    componentDidMount() {\r\n        this.props.getUserData()\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <HeaderFC isAuth={this.props.isAuth}\r\n                      login={this.props.login}\r\n            />\r\n        )\r\n    }\r\n}\r\n\r\nconst MapStateToProps = (state: RootStateType): MapStatePropsType => {\r\n    return ({\r\n        isAuth: state.auth.isAuth,\r\n        login: state.auth.login\r\n    })\r\n}\r\n\r\nexport const HeaderContainer = connect<MapStatePropsType, MapDispatchPropsType, {}, RootStateType>(MapStateToProps, {getUserData})(Header);","import React from 'react';\nimport './App.scss';\nimport Navbar from './components/Navbar/Navbar';\nimport {BrowserRouter, Redirect, Route, Switch} from 'react-router-dom';\nimport {MessagesContainer} from './components/Messages/MessagesContainer';\nimport {UsersContainer} from './components/Users/UsersContainer';\nimport ProfileContainer from './components/Profile/ProfileContainer';\nimport {HeaderContainer} from './components/Header/HeaderContainer';\n\n\nfunction App() {\n    return (\n        <BrowserRouter>\n            <div className=\"App-wrapper\">\n                <HeaderContainer/>\n                <Navbar/>\n                <section className=\"Content\">\n                    <Switch>\n                        <Route path=\"/profile/:userID?\" render={() => <ProfileContainer/>}/>\n                        <Route path=\"/messages\" render={() => <MessagesContainer/>}/>\n                        <Route path=\"/friends\" render={() => <UsersContainer/>}/>\n                        <Redirect to=\"/profile\"/>\n                    </Switch>\n                </section>\n            </div>\n        </BrowserRouter>\n    );\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport React from 'react';\nimport './index.scss';\nimport {store} from './state/redux_store';\nimport App from './App';\nimport {Provider} from 'react-redux';\n\nReactDOM.render(\n    <React.StrictMode>\n        <Provider store={store}>\n            <App/>\n        </Provider>\n    </React.StrictMode>,\n    document.getElementById('root')\n);"],"sourceRoot":""}