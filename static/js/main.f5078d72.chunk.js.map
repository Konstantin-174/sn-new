{"version":3,"sources":["components/Messages/Messages.module.scss","common/Preloader/PreloaderSVG.module.scss","components/Profile/posts/post/Post.module.scss","components/Profile/avatar/Avatar.module.scss","components/Header/Header.module.scss","components/Profile/posts/MyPosts.module.scss","components/Messages/message/MessageRequest.module.scss","components/Messages/message/MessageResponse.module.scss","components/Profile/Profile.module.scss","components/Navbar/Navbar.module.scss","components/Profile/avatar/img/IRh4RWeX.jpg","components/Users/Users.module.scss","components/Messages/conversation/Conversation.module.scss","components/Users/images/nonameUser.jpg","components/Profile/profileInfo/ProfileInfo.module.scss","state/reducers/dialogs_reducer.ts","state/reducers/profile_reducer.ts","state/reducers/users_reducer.ts","state/redux_store.ts","components/Header/Header.tsx","components/Navbar/Navbar.tsx","components/Profile/avatar/Avatar.tsx","components/Profile/profileInfo/ProfileInfo.tsx","components/Profile/posts/post/Post.tsx","components/Profile/posts/MyPosts.tsx","components/Profile/posts/MyPostsContainer.tsx","components/Profile/Profile.tsx","components/Messages/message/MessageRequest.tsx","components/Messages/message/MessageResponse.tsx","components/Messages/conversation/Conversation.tsx","components/Messages/DialogLink.tsx","components/Messages/Messages.tsx","components/Messages/MessagesContainer.tsx","components/Users/UsersFC.tsx","common/Preloader/PreloaderSVG.tsx","components/Users/UsersContainer.tsx","App.tsx","index.tsx"],"names":["module","exports","messagesWrap","dialogsInner","friendsMessages","active","messagesLink","linkTitle","messagesContent","messageInput","inputArea","inputBtn","mainFader","loader","pulse","path7","path6","path5","path4","path3","path2","path1","path0","postWrap","postAutor","postContent","ava","postText","postLikes","likeIcon","avaWrap","avaImg","avaSettings","avaBtn","headerWrap","headLogo","headContent","postsWrap","inputPost","messageWrap","message","angle","profileWrap","avaDiscript","navWrap","navContent","link","navIcon","__webpack_require__","p","usersWrap","getBtn","pagesWrap","selectedPage","innerWrap","userInfoWrap","user","userName","userStatus","location","country","city","conversationWrap","infoWrap","infoItem","itemTitle","itemDescription","descriptionText","initialState","dialogs","id","v1","name","messages","text","newMessageText","posts","image","likes","newPostText","InitialState","users","pagesSize","totalUsersCount","currentPage","isFetching","rootReducer","combineReducers","profileReducer","state","arguments","length","undefined","action","type","stateCopy","Object","objectSpread","toConsumableArray","newPost","unshift","newText","dialogsReducer","newMessage","push","usersReducer","map","u","userID","followed","count","store","createStore","Header","react_default","a","createElement","className","styles","href","index_esm","logo","size","Navbar","react_router_dom","to","activeClassName","bs_index_esm","navText","Avatar","src","img","alt","ProfileInfo","Post","_ref","ai_index_esm","likesCount","MyPosts","onAddPost","onNewTextChangeHandler","postsEl","post","post_Post","key","value","onChange","placeholder","onClick","MyPostsContainer","connect","dispatch","el","currentTarget","Profile","avatar_Avatar","profileInfo_ProfileInfo","MessageRequest","MessageResponse","Conversation","newMessageEl","message_MessageResponse","message_MessageRequest","DialogLink","Messages","onAddMessage","onNewMessageChangeHandler","dialogsEl","dialog","Messages_DialogLink","conversation_Conversation","MessagesContainer","UsersFC","onPageChanged","unfollow","follow","pagesCount","Math","ceil","pages","i","style","marginLeft","photos","large","status","PreloaderSVG","viewBox","data-name","d","fill","path8","Users","pageNumber","_this","props","setCurrentPage","toggleIsFetching","axios","get","concat","then","response","setUsers","data","items","_this2","this","setTotalUsersCount","totalCount","Fragment","PreloaderSVG_PreloaderSVG","UsersFC_UsersFC","React","Component","UsersContainer","FollowAC","UnfollowAC","setUsersAC","setCurrentPageAC","setTotalUsersCountAC","toggleIsFetchingAC","App","components_Header_Header","components_Navbar_Navbar","react_router","path","render","components_Profile_Profile","ReactDOM","StrictMode","es","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.f5078d72.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"messagesWrap\":\"Messages_messagesWrap__2nz78\",\"dialogsInner\":\"Messages_dialogsInner__2GJPn\",\"friendsMessages\":\"Messages_friendsMessages__1aUAf\",\"active\":\"Messages_active__29Eub\",\"messagesLink\":\"Messages_messagesLink__2jVMy\",\"linkTitle\":\"Messages_linkTitle__fjSYB\",\"messagesContent\":\"Messages_messagesContent__AR3ux\",\"messageInput\":\"Messages_messageInput__2fsWP\",\"inputArea\":\"Messages_inputArea__2y7ur\",\"inputBtn\":\"Messages_inputBtn__1TLdz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainFader\":\"PreloaderSVG_mainFader__1igsZ\",\"loader\":\"PreloaderSVG_loader__1oRYk\",\"pulse\":\"PreloaderSVG_pulse__UrCAz\",\"path7\":\"PreloaderSVG_path7__1GDgv\",\"path6\":\"PreloaderSVG_path6__3SMwK\",\"path5\":\"PreloaderSVG_path5__oNd75\",\"path4\":\"PreloaderSVG_path4__1Us6x\",\"path3\":\"PreloaderSVG_path3__5AkEc\",\"path2\":\"PreloaderSVG_path2__hhvwI\",\"path1\":\"PreloaderSVG_path1__2K28F\",\"path0\":\"PreloaderSVG_path0__3FRnn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postWrap\":\"Post_postWrap__33QUx\",\"postAutor\":\"Post_postAutor__OPZNZ\",\"postContent\":\"Post_postContent__2wo3j\",\"ava\":\"Post_ava__1tdgG\",\"postText\":\"Post_postText__y2cCX\",\"postLikes\":\"Post_postLikes__3rZc0\",\"likeIcon\":\"Post_likeIcon__34Epz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"avaWrap\":\"Avatar_avaWrap__3tpKP\",\"avaImg\":\"Avatar_avaImg__OYA3s\",\"ava\":\"Avatar_ava__3MD2v\",\"avaSettings\":\"Avatar_avaSettings__1BNE_\",\"avaBtn\":\"Avatar_avaBtn__cpEjP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"headerWrap\":\"Header_headerWrap__3-83i\",\"headLogo\":\"Header_headLogo__3TQve\",\"headContent\":\"Header_headContent__3deog\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsWrap\":\"MyPosts_postsWrap__31Cb8\",\"inputPost\":\"MyPosts_inputPost__2BE_Y\",\"inputArea\":\"MyPosts_inputArea__3WVLA\",\"inputBtn\":\"MyPosts_inputBtn__2D68l\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"messageWrap\":\"MessageRequest_messageWrap__1u85V\",\"message\":\"MessageRequest_message__1i1G-\",\"angle\":\"MessageRequest_angle__24Y4D\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"messageWrap\":\"MessageResponse_messageWrap__1V2Dh\",\"message\":\"MessageResponse_message__7KkQ2\",\"angle\":\"MessageResponse_angle__3pby9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profileWrap\":\"Profile_profileWrap__37dOT\",\"avaDiscript\":\"Profile_avaDiscript__33R9Z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navWrap\":\"Navbar_navWrap__18mrh\",\"navContent\":\"Navbar_navContent__2pfvB\",\"active\":\"Navbar_active__QtVGT\",\"link\":\"Navbar_link__3vOxA\",\"navIcon\":\"Navbar_navIcon__36W5q\"};","module.exports = __webpack_public_path__ + \"static/media/IRh4RWeX.eb838340.jpg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"usersWrap\":\"Users_usersWrap__e1s2w\",\"getBtn\":\"Users_getBtn__bGW_U\",\"pagesWrap\":\"Users_pagesWrap__1XFtJ\",\"selectedPage\":\"Users_selectedPage__2n7ut\",\"innerWrap\":\"Users_innerWrap__1HFul\",\"avaWrap\":\"Users_avaWrap__rzbwa\",\"avaImg\":\"Users_avaImg__1UWqP\",\"ava\":\"Users_ava__23Qog\",\"avaSettings\":\"Users_avaSettings__3C8js\",\"avaBtn\":\"Users_avaBtn__157ef\",\"userInfoWrap\":\"Users_userInfoWrap__2werw\",\"user\":\"Users_user__16aU1\",\"userName\":\"Users_userName__3B_lJ\",\"userStatus\":\"Users_userStatus__P3CYk\",\"location\":\"Users_location__1pNzC\",\"country\":\"Users_country__16fVl\",\"city\":\"Users_city__2TDNy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"conversationWrap\":\"Conversation_conversationWrap__39JRi\"};","module.exports = __webpack_public_path__ + \"static/media/nonameUser.2a09aa4b.jpg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"infoWrap\":\"ProfileInfo_infoWrap__1Sogx\",\"infoItem\":\"ProfileInfo_infoItem__x1wAk\",\"itemTitle\":\"ProfileInfo_itemTitle__sIu7o\",\"itemDescription\":\"ProfileInfo_itemDescription__1muTk\",\"descriptionText\":\"ProfileInfo_descriptionText__2PDqw\"};","import {v1} from 'uuid';\r\nimport {\r\n    AddMessageActionType,\r\n    AllActionTypes,\r\n    ChangeNewMessageActionType\r\n} from '../redux_store';\r\n\r\nexport type DialogsType = {\r\n    id: string\r\n    name: string\r\n}\r\n\r\nexport type MessageType = {\r\n    id: string\r\n    text: string\r\n}\r\n\r\nexport type InitialDialogsStateType = typeof initialState\r\n\r\nconst initialState = {\r\n    dialogs: [\r\n        {\r\n            id: v1(),\r\n            name: 'Amy Wong'\r\n        },\r\n        {\r\n            id: v1(),\r\n            name: 'Zapp Brannigan'\r\n        },\r\n        {\r\n            id: v1(),\r\n            name: 'John D. Zoidberg'\r\n        },\r\n        {\r\n            id: v1(),\r\n            name: 'Turanga Leela'\r\n        },\r\n        {\r\n            id: v1(),\r\n            name: 'Hubert J. Farnsworth'\r\n        },\r\n    ] as Array<DialogsType>,\r\n    messages: [\r\n        {\r\n            id: v1(),\r\n            text: 'Hi! How are you?'\r\n        },\r\n        {\r\n            id: v1(),\r\n            text: 'Hi! I\\'m fine, thanks!'\r\n        }\r\n    ] as Array<MessageType>,\r\n    newMessageText: ''\r\n}\r\n\r\nexport const dialogsReducer = (state: InitialDialogsStateType = initialState, action: AllActionTypes): InitialDialogsStateType => {\r\n\r\n    switch (action.type) {\r\n        case \"ADD-MESSAGE\": {\r\n            let stateCopy = {...state}\r\n            stateCopy.messages = [...state.messages]\r\n            const newMessage: MessageType = {\r\n                id: v1(),\r\n                text: state.newMessageText\r\n            }\r\n            stateCopy.messages.push(newMessage);\r\n            stateCopy.newMessageText = \"\";\r\n            return stateCopy;\r\n        }\r\n        case \"CHANGE-NEW-MESSAGE\": {\r\n            let stateCopy = {...state}\r\n            stateCopy.newMessageText = action.newMessage;\r\n            return stateCopy;\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n// === ACTION CREATORS ===\r\nexport const addMessageAC = (): AddMessageActionType => {\r\n    return {\r\n        type: \"ADD-MESSAGE\"\r\n    }\r\n}\r\n\r\nexport const changeNewMessageAC = (newMessage: string): ChangeNewMessageActionType => {\r\n    return {\r\n        type: \"CHANGE-NEW-MESSAGE\",\r\n        newMessage: newMessage\r\n    }\r\n}\r\n\r\n// === / ACTION CREATORS ===","import {v1} from 'uuid';\r\nimport {\r\n    AddPostActionType,\r\n    AllActionTypes,\r\n    ChangeNewTextActionType\r\n} from '../redux_store';\r\n\r\nexport type PostsType = {\r\n    image: string\r\n    id: string\r\n    name: string\r\n    text: string\r\n    likes: number\r\n}\r\n\r\nexport type InitialProfileStateType = typeof initialState\r\n\r\nconst initialState = {\r\n    posts: [\r\n        {\r\n            image: 'https://pbs.twimg.com/profile_images/472509364738072576/dtKZNd1J.jpeg',\r\n            id: v1(),\r\n            name: 'Philip J. Fry',\r\n            text: 'Phew! What a terrible dream I had! I will never sleep again!',\r\n            likes: 12\r\n        },\r\n        {\r\n            image: 'https://i.pinimg.com/736x/bb/4f/45/bb4f4529f8d7d3d60aa6fb3096b94ee6--futurama-why-not.jpg',\r\n            id: v1(),\r\n            name: 'John D. Zoidberg',\r\n            text: 'Whoop! Whoop! Whoop! Whoop! Whoop!',\r\n            likes: 5\r\n        },\r\n        {\r\n            image: 'https://tridigital.wpengine.com/wp-content/uploads/2014/10/Turanga-Leela-Cartoon-Anime.jpg',\r\n            id: v1(),\r\n            name: 'Turanga Leela',\r\n            text: 'Have you run out of idiotic thoughts?',\r\n            likes: 24\r\n        },\r\n    ] as Array<PostsType>,\r\n        newPostText: ''\r\n}\r\n\r\n\r\nexport const profileReducer = (state: InitialProfileStateType = initialState, action: AllActionTypes): InitialProfileStateType => {\r\n    switch (action.type){\r\n        case \"ADD-POST\": {\r\n            let stateCopy = {...state}\r\n            stateCopy.posts = [...state.posts]\r\n            const newPost: PostsType = {\r\n                image: 'https://media1.tenor.com/images/9a04b431a9355b4b6295f25cbbcfe547/tenor.gif?itemid=4868772',\r\n                id: v1(),\r\n                name: '%@User_name@%',\r\n                text: state.newPostText,\r\n                likes: 0\r\n            }\r\n            stateCopy.posts.unshift(newPost)\r\n            stateCopy.newPostText = \"\";\r\n            return stateCopy;\r\n        }\r\n        case \"CHANGE-NEW-TEXT\": {\r\n            let stateCopy = {...state}\r\n            stateCopy.newPostText = action.newText;\r\n            return stateCopy;\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n// === ACTION CREATORS ===\r\nexport const addPostAC = (): AddPostActionType => {\r\n    return {\r\n        type: \"ADD-POST\"\r\n    }\r\n}\r\n\r\nexport const changeNewTextAC = (newText: string): ChangeNewTextActionType => {\r\n    return {\r\n        type: \"CHANGE-NEW-TEXT\",\r\n        newText: newText\r\n    }\r\n}\r\n\r\n// === / ACTION CREATORS ===","import {\r\n    AllActionTypes,\r\n    FollowAT, SetCurrentPageAT, SetTotalUsersCountAT, SetUsersAT, ToggleIsFetchingAT,\r\n    UnfollowAT\r\n} from '../redux_store';\r\n\r\nexport type UserType = {\r\n    name: string\r\n    id: number\r\n    uniqueUrlName: null | string\r\n    photos: PhotosType\r\n    status: null | string\r\n    followed: boolean\r\n}\r\n\r\ntype PhotosType = {\r\n    small: null | string\r\n    large: null | string\r\n}\r\n\r\nexport type InitialUsersStateType = typeof InitialState\r\n\r\nconst InitialState = {\r\n    users: [] as Array<UserType>,\r\n    pagesSize: 5,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    isFetching: true\r\n}\r\n\r\nexport const usersReducer = (state: InitialUsersStateType = InitialState, action: AllActionTypes): InitialUsersStateType => {\r\n    switch (action.type) {\r\n        case 'FOLLOW':\r\n            return {\r\n                ...state, users: state.users.map(u => {\r\n                    if (u.id === action.userID) {\r\n                        return {...u, followed: true}\r\n                    }\r\n                    return u\r\n                })\r\n            }\r\n        case 'UNFOLLOW':\r\n            return {\r\n                ...state, users: state.users.map(u => {\r\n                    if (u.id === action.userID) {\r\n                        return {...u, followed: false}\r\n                    }\r\n                    return u\r\n                })\r\n            }\r\n        case 'SET-USERS':\r\n            return {...state, users: action.users}\r\n        case 'SET-CURRENT-PAGE':\r\n            return {...state, currentPage: action.currentPage}\r\n        case 'SET-TOTAL-USERS-COUNT':\r\n            return {...state, totalUsersCount: action.count}\r\n        case 'TOGGLE-IS-FETCHING':\r\n            return {...state, isFetching: action.isFetching}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n// === ACTION CREATORS ===\r\nexport const FollowAC = (userID: number): FollowAT => {\r\n    return {\r\n        type: 'FOLLOW',\r\n        userID: userID\r\n    }\r\n}\r\n\r\nexport const UnfollowAC = (userID: number): UnfollowAT => {\r\n    return {\r\n        type: 'UNFOLLOW',\r\n        userID: userID\r\n    }\r\n}\r\n\r\nexport const setUsersAC = (users: Array<UserType>): SetUsersAT => {\r\n    return {\r\n        type: 'SET-USERS',\r\n        users\r\n    }\r\n}\r\n\r\nexport const setCurrentPageAC = (currentPage: number): SetCurrentPageAT => {\r\n    return {\r\n     type: 'SET-CURRENT-PAGE',\r\n     currentPage\r\n    }\r\n}\r\n\r\nexport const setTotalUsersCountAC = (count: number): SetTotalUsersCountAT => {\r\n    return {\r\n        type: 'SET-TOTAL-USERS-COUNT',\r\n        count\r\n    }\r\n}\r\n\r\nexport const toggleIsFetchingAC = (isFetching: boolean): ToggleIsFetchingAT => {\r\n    return {\r\n        type: 'TOGGLE-IS-FETCHING',\r\n        isFetching\r\n    }\r\n}\r\n\r\n\r\n// === / ACTION CREATORS ===\r\n","import {combineReducers, createStore } from \"redux\";\r\nimport {dialogsReducer} from './reducers/dialogs_reducer';\r\nimport {profileReducer} from './reducers/profile_reducer';\r\nimport {usersReducer, UserType} from './reducers/users_reducer';\r\n\r\nconst rootReducer = combineReducers({\r\n    profileReducer,\r\n    dialogsReducer,\r\n    usersReducer\r\n})\r\n\r\nexport type RootStateType = ReturnType<typeof rootReducer>\r\n\r\n// === ACTION TYPES ===\r\nexport type AllActionTypes = AddPostActionType\r\n    | ChangeNewTextActionType\r\n    | AddMessageActionType\r\n    | ChangeNewMessageActionType\r\n    | FollowAT\r\n    | UnfollowAT\r\n    | SetUsersAT\r\n    | SetCurrentPageAT\r\n    | SetTotalUsersCountAT\r\n    | ToggleIsFetchingAT\r\n\r\nexport type AddPostActionType = {\r\n    type: 'ADD-POST'\r\n}\r\n\r\nexport type ChangeNewTextActionType = {\r\n    type: 'CHANGE-NEW-TEXT'\r\n    newText: string\r\n}\r\n\r\nexport type AddMessageActionType = {\r\n    type: 'ADD-MESSAGE'\r\n}\r\n\r\nexport type ChangeNewMessageActionType = {\r\n    type: 'CHANGE-NEW-MESSAGE'\r\n    newMessage: string\r\n}\r\n\r\nexport type FollowAT = {\r\n    type: 'FOLLOW'\r\n    userID: number\r\n}\r\n\r\nexport type UnfollowAT = {\r\n    type: 'UNFOLLOW'\r\n    userID: number\r\n}\r\n\r\nexport type SetUsersAT = {\r\n    type: 'SET-USERS'\r\n    users: Array<UserType>\r\n}\r\n\r\nexport type SetCurrentPageAT = {\r\n    type: 'SET-CURRENT-PAGE'\r\n    currentPage: number\r\n}\r\n\r\nexport type SetTotalUsersCountAT = {\r\n    type: 'SET-TOTAL-USERS-COUNT'\r\n    count: number\r\n}\r\n\r\nexport type ToggleIsFetchingAT = {\r\n    type: 'TOGGLE-IS-FETCHING'\r\n    isFetching: boolean\r\n}\r\n// === / ACTION TYPES ===\r\n\r\nexport const store = createStore(rootReducer);\r\n","import React from 'react';\r\nimport styles from './Header.module.scss';\r\nimport {DiLinux} from \"react-icons/di\";\r\n\r\nconst Header: React.FC = () => {\r\n    return (\r\n        <header className={styles.headerWrap}>\r\n            <a href=\"#\" className={styles.headLogo}>\r\n                <DiLinux className={styles.logo} size=\"2em\" />\r\n            </a>\r\n            <div className={styles.headContent}>Welcome to my SocialNetwork</div>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport styles from './Navbar.module.scss';\r\nimport { BsFillGrid1X2Fill, BsFillChatFill,\r\n    BsPeopleFill, BsFillExclamationSquareFill } from \"react-icons/bs\";\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst Navbar: React.FC = () => {\r\n    return (\r\n        <section className={styles.navWrap}>\r\n            <div className={styles.navContent}>\r\n                <NavLink to=\"/profile\" className={styles.link} activeClassName={styles.active}>\r\n                    <BsFillGrid1X2Fill className={styles.navIcon}/>\r\n                    <div  className={styles.navText}>\r\n                        Profile\r\n                    </div>\r\n                </NavLink>\r\n                <NavLink to=\"/messages\" className={styles.link} activeClassName={styles.active}>\r\n                    <BsFillChatFill className={styles.navIcon}/>\r\n                    <div className={styles.navText}>\r\n                        Messages\r\n                    </div>\r\n                </NavLink>\r\n                <NavLink to=\"/friends\" className={styles.link} activeClassName={styles.active}>\r\n                    <BsPeopleFill className={styles.navIcon}/>\r\n                    <div className={styles.navText}>\r\n                        Friends\r\n                    </div>\r\n                </NavLink>\r\n                <NavLink to=\"/news\" className={styles.link} activeClassName={styles.active}>\r\n                    <BsFillExclamationSquareFill className={styles.navIcon}/>\r\n                    <div className={styles.navText}>\r\n                        News\r\n                    </div>\r\n                </NavLink>\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default Navbar;","import React from 'react';\r\nimport styles from './Avatar.module.scss';\r\nimport img from './img/IRh4RWeX.jpg';\r\n\r\nconst Avatar: React.FC = () => {\r\n    return (\r\n        <section className={styles.avaWrap}>\r\n            <div className={styles.avaImg}>\r\n                <img className={styles.ava} src={img} alt=\"Avatar\"/>\r\n            </div>\r\n            <div className={styles.avaSettings}>\r\n                <button className={styles.avaBtn}>\r\n                    Edit\r\n                </button>\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default Avatar;","import React from 'react';\r\nimport styles from './ProfileInfo.module.scss';\r\n\r\nconst ProfileInfo: React.FC = () => {\r\n    return (\r\n        <section className={styles.infoWrap}>\r\n            <div className={styles.infoItem}>\r\n                <div className={styles.itemTitle}>\r\n                    Name\r\n                </div>\r\n                <div className={styles.itemDescription}>\r\n                    Bender Rodriguez\r\n                </div>\r\n            </div>\r\n            <div className={styles.infoItem}>\r\n                <div className={styles.itemTitle}>\r\n                    Birth\r\n                </div>\r\n                <div className={styles.itemDescription}>\r\n                    10/11/1989\r\n                </div>\r\n            </div>\r\n            <div className={styles.infoItem}>\r\n                <div className={styles.itemTitle}>\r\n                    Education\r\n                </div>\r\n                <div className={styles.itemDescription}>\r\n                    University degree\r\n                </div>\r\n            </div>\r\n            <div className={styles.infoItem}>\r\n                <div className={styles.itemTitle}>\r\n                    Quotes\r\n                </div>\r\n                <div className={styles.itemDescription}>\r\n                    <div className={styles.descriptionText}>\r\n                        \"I'm going to build my own theme park! With blackjack! And hookers!\"\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default ProfileInfo;","import React from 'react';\r\nimport styles from './Post.module.scss';\r\nimport img from './img/ghML0mY_.jpg';\r\nimport { AiFillLike } from \"react-icons/ai\";\r\n\r\ntype PostType = {\r\n    name: string\r\n    text: string\r\n    likes: number\r\n    image: string\r\n}\r\n\r\nconst Post: React.FC<PostType> = ({name,\r\n                                      text,\r\n                                      likes,\r\n                                      image}) => {\r\n    return (\r\n        <section className={styles.postWrap}>\r\n            <div className={styles.postAutor}>\r\n                {name}\r\n            </div>\r\n            <div className={styles.postContent}>\r\n                <div className={styles.ava}>\r\n                    <img src={image} alt=\"Avatar\"/>\r\n                </div>\r\n                <div className={styles.postText}>\r\n                    &#8220;{text}&#8221;\r\n                </div>\r\n            </div>\r\n            <div className={styles.postLikes}>\r\n                <AiFillLike className={styles.likeIcon}/>\r\n                <div className={styles.likesCount}>\r\n                    {likes}\r\n                </div>\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default Post;","import React, {ChangeEvent} from 'react';\r\nimport styles from './MyPosts.module.scss'\r\nimport {BsBoxArrowInDown} from 'react-icons/bs';\r\nimport Post from './post/Post';\r\nimport {MyPostsPropsType} from './MyPostsContainer';\r\n\r\nconst MyPosts: React.FC<MyPostsPropsType> = ({\r\n                                                 posts,\r\n                                                 newPost,\r\n                                                 onAddPost,\r\n                                                 onNewTextChangeHandler\r\n                                             }) => {\r\n\r\n    let postsEl = posts.map((post) => <Post key={post.id}\r\n                                            name={post.name}\r\n                                            text={post.text}\r\n                                            likes={post.likes}\r\n                                            image={post.image}/>)\r\n\r\n    const onPostChange = (text: ChangeEvent<HTMLInputElement>) => {\r\n        onNewTextChangeHandler(text)\r\n    }\r\n\r\n    return (\r\n        <section className={styles.postsWrap}>\r\n            <div className={styles.inputPost}>\r\n                <div className={styles.inputArea}>\r\n                    <input type=\"text\"\r\n                           value={newPost}\r\n                           onChange={onPostChange}\r\n                           placeholder=\"Enter your message\"\r\n                    />\r\n                </div>\r\n                <BsBoxArrowInDown onClick={onAddPost}\r\n                                  className={styles.inputBtn}\r\n                                  size=\"2em\"\r\n                />\r\n            </div>\r\n            {postsEl}\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default MyPosts;\r\n","import {ChangeEvent} from 'react';\r\nimport {\r\n    addPostAC,\r\n    changeNewTextAC,\r\n    PostsType\r\n} from '../../../state/reducers/profile_reducer';\r\nimport MyPosts from './MyPosts';\r\nimport {RootStateType} from '../../../state/redux_store';\r\nimport {connect} from 'react-redux';\r\nimport {Dispatch} from 'redux';\r\n\r\ntype MapStatePropsType = {\r\n    posts: Array<PostsType>\r\n    newPost: string\r\n}\r\n\r\ntype MapDispatchPropsType = {\r\n    onAddPost: () => void\r\n    onNewTextChangeHandler: (el: ChangeEvent<HTMLInputElement>) => void\r\n}\r\n\r\nexport type MyPostsPropsType = MapStatePropsType & MapDispatchPropsType\r\n\r\nlet mapStateToProps = (state: RootStateType): MapStatePropsType => {\r\n    return {\r\n        posts: state.profileReducer.posts,\r\n        newPost: state.profileReducer.newPostText\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch: Dispatch): MapDispatchPropsType => {\r\n    return {\r\n        onAddPost: () => {\r\n            dispatch(addPostAC())\r\n        },\r\n        onNewTextChangeHandler: (el: ChangeEvent<HTMLInputElement>) => {\r\n            dispatch(changeNewTextAC(el.currentTarget.value))\r\n        }\r\n    }\r\n}\r\n\r\nexport const MyPostsContainer = connect (mapStateToProps, mapDispatchToProps)(MyPosts)","import React from 'react';\r\nimport styles from './Profile.module.scss'\r\nimport Avatar from './avatar/Avatar';\r\nimport ProfileInfo from './profileInfo/ProfileInfo';\r\nimport {MyPostsContainer} from './posts/MyPostsContainer';\r\n\r\nconst Profile: React.FC = () => {\r\n    return (\r\n        <section className={styles.profileWrap}>\r\n          <div className={styles.avaDiscript}>\r\n              <Avatar/>\r\n              <ProfileInfo />\r\n          </div>\r\n            <MyPostsContainer />\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default Profile;","import React from 'react';\r\nimport styles from './MessageRequest.module.scss';\r\n\r\ntype MessageRequestPropsType = {\r\n    message: string\r\n}\r\n\r\nconst MessageRequest: React.FC<MessageRequestPropsType> = ({message}) => {\r\n    return (\r\n        <section className={styles.messageWrap}>\r\n            <div className={styles.angle}/>\r\n            <div className={styles.message}>\r\n                {message}\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default MessageRequest;","import React from 'react';\r\nimport styles from './MessageResponse.module.scss';\r\n\r\ntype MessageResponsePropsType = {\r\n    message: string\r\n}\r\n\r\nconst MessageResponse: React.FC<MessageResponsePropsType> = ({message}) => {\r\n    return (\r\n        <section className={styles.messageWrap}>\r\n            <div className={styles.message}>\r\n                {message}\r\n            </div>\r\n            <div className={styles.angle}/>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default MessageResponse;","import React from 'react';\r\nimport styles from './Conversation.module.scss';\r\nimport MessageRequest from '../message/MessageRequest';\r\nimport MessageResponse from '../message/MessageResponse';\r\nimport {MessageType} from '../../../state/reducers/dialogs_reducer';\r\n\r\ntype ConversationType = {\r\n    message: Array<MessageType>\r\n}\r\n\r\nconst Conversation: React.FC<ConversationType> = ({message}) => {\r\n\r\n    const newMessageEl = message.map((message:MessageType) => <MessageResponse key={message.id}\r\n                                                                                     message={message.text}/>)\r\n\r\n    return (\r\n        <section className={styles.conversationWrap}>\r\n            <MessageRequest message={message[0].text}/>\r\n            {newMessageEl}\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default Conversation;","import {NavLink} from 'react-router-dom';\r\nimport styles from './Messages.module.scss';\r\nimport React from 'react';\r\n\r\ntype DialogsLinkPropsType = {\r\n    id: string\r\n    name: string\r\n}\r\n\r\nconst DialogLink: React.FC<DialogsLinkPropsType> = ({name,\r\n                                                        id}) => {\r\n    return (\r\n        <NavLink to={'/messages/conversation/' + id}\r\n                 className={styles.messagesLink}\r\n                 activeClassName={styles.active}\r\n        >\r\n            <div className={styles.linkTitle}>{name}</div>\r\n        </NavLink>\r\n    )\r\n}\r\n\r\nexport default DialogLink;\r\n\r\n","import React, {ChangeEvent} from 'react';\r\nimport styles from './Messages.module.scss'\r\nimport {BsBoxArrowInUp} from 'react-icons/bs';\r\nimport Conversation from './conversation/Conversation';\r\nimport DialogLink from './DialogLink';\r\nimport {DialogsType} from '../../state/reducers/dialogs_reducer';\r\nimport {MessagesPropsType} from './MessagesContainer';\r\n\r\nconst Messages: React.FC<MessagesPropsType> = ({dialogs,\r\n                                                   messages,\r\n                                                   newMessage,\r\n                                                   onAddMessage,\r\n                                                   onNewMessageChangeHandler} ) => {\r\n\r\n    let dialogsEl = dialogs.map((dialog: DialogsType) => <DialogLink key={dialog.id}\r\n                                                                           id={dialog.id}\r\n                                                                           name={dialog.name}/>)\r\n\r\n    const newMessageChangeHandler = (text: ChangeEvent<HTMLInputElement>) => onNewMessageChangeHandler(text)\r\n\r\n    return (\r\n        <section className={styles.messagesWrap}>\r\n            <div className={styles.dialogsInner}>\r\n                <div className={styles.friendsMessages}>\r\n                    {dialogsEl}\r\n                </div>\r\n                <div className={styles.messagesContent}>\r\n                    <Conversation message={messages}/>\r\n                </div>\r\n            </div>\r\n            <div className={styles.messageInput}>\r\n                <div className={styles.inputArea}>\r\n                    <input type=\"text\"\r\n                           value={newMessage}\r\n                           onChange={newMessageChangeHandler}\r\n                           placeholder=\"Enter your message\"\r\n                    />\r\n                </div>\r\n                <BsBoxArrowInUp onClick={onAddMessage} //React.DOMAttributes<T>.onClick?: React.MouseEventHandler<SVGElement>\r\n                                className={styles.inputBtn}\r\n                                size=\"2em\"\r\n                />\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default Messages;","import {ChangeEvent} from 'react';\r\nimport {\r\n    addMessageAC,\r\n    changeNewMessageAC,\r\n    DialogsType,\r\n    MessageType\r\n} from '../../state/reducers/dialogs_reducer';\r\nimport Messages from './Messages';\r\nimport {connect} from 'react-redux';\r\nimport {RootStateType} from '../../state/redux_store';\r\nimport { Dispatch } from 'redux';\r\n\r\ntype MapStatePropsType = {\r\n    newMessage: string\r\n    dialogs: Array<DialogsType>\r\n    messages: Array<MessageType>\r\n}\r\n\r\ntype MapDispatchPropsType = {\r\n    onAddMessage: () => void\r\n    onNewMessageChangeHandler: (el: ChangeEvent<HTMLInputElement>) => void\r\n}\r\n\r\nexport type MessagesPropsType = MapStatePropsType & MapDispatchPropsType\r\n\r\nlet mapStateToProps = (state: RootStateType): MapStatePropsType => {\r\n    return {\r\n        newMessage: state.dialogsReducer.newMessageText,\r\n        dialogs: state.dialogsReducer.dialogs,\r\n        messages: state.dialogsReducer.messages\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch: Dispatch): MapDispatchPropsType => {\r\n    return {\r\n        onAddMessage: () => {\r\n            dispatch(addMessageAC())\r\n        },\r\n        onNewMessageChangeHandler: (el: ChangeEvent<HTMLInputElement>) => {\r\n            dispatch(changeNewMessageAC(el.currentTarget.value))\r\n        }\r\n    }\r\n}\r\n\r\nexport const MessagesContainer = connect(mapStateToProps, mapDispatchToProps)(Messages);\r\n\r\n","import React from 'react';\r\nimport styles from './Users.module.scss';\r\nimport img from './images/nonameUser.jpg';\r\nimport {UserType} from '../../state/reducers/users_reducer';\r\n\r\ntype UsersFCPropsType = {\r\n    users: Array<UserType>\r\n    pagesSize: number\r\n    totalUsersCount: number\r\n    currentPage: number\r\n    follow: (userID: number) => void\r\n    unfollow: (userID: number) => void\r\n    onPageChanged: (pageNumber: number) => void\r\n}\r\n\r\nexport const UsersFC: React.FC<UsersFCPropsType> = ({\r\n                                                        users,\r\n                                                        totalUsersCount,\r\n                                                        currentPage,\r\n                                                        pagesSize,\r\n                                                        onPageChanged,\r\n                                                        unfollow,\r\n                                                        follow\r\n                                                    }) => {\r\n\r\n    let pagesCount = Math.ceil(totalUsersCount / pagesSize)\r\n\r\n    let pages = []\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i)\r\n    }\r\n\r\n    return (\r\n        <section className={styles.usersWrap}>\r\n            <div className={styles.pagesWrap}>\r\n                {pages.map(p => {\r\n                    return <span style={{marginLeft: \"5px\"}}\r\n                                 className={currentPage === p ? styles.selectedPage : ''}\r\n                                 onClick={() => onPageChanged(p)}>{p}</span>\r\n                })}\r\n            </div>\r\n            {\r\n                users.map(u => (\r\n                    <section key={u.id}\r\n                             className={styles.innerWrap}>\r\n                        <div className={styles.avaWrap}>\r\n                            <div className={styles.avaImg}>\r\n                                <img className={styles.ava}\r\n                                     src={u.photos.large === null ? img : u.photos.large}\r\n                                     alt=\"Avatar\"\r\n                                />\r\n                            </div>\r\n                            <div className={styles.avaSettings}>\r\n                                {u.followed\r\n                                    ? <button className={styles.avaBtn} onClick={() => {\r\n                                        unfollow(u.id)\r\n                                    }}>Unfollow</button>\r\n                                    : <button className={styles.avaBtn} onClick={() => {\r\n                                        follow(u.id)\r\n                                    }}>Follow</button>}\r\n                            </div>\r\n                        </div>\r\n                        <div className={styles.userInfoWrap}>\r\n                            <div className={styles.user}>\r\n                                <div className={styles.userName}>\r\n                                    {u.name}\r\n                                </div>\r\n                                <div className={styles.userStatus}>\r\n                                    &#8220;{u.status}&#8221;\r\n                                </div>\r\n                            </div>\r\n                            <div className={styles.location}>\r\n                                <div className={styles.country}>\r\n                                    country\r\n                                </div>\r\n                                <div className={styles.city}>\r\n                                    city\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </section>\r\n                ))\r\n            }\r\n        </section>\r\n    )\r\n}","import React from 'react';\r\nimport styles from './PreloaderSVG.module.scss'\r\n\r\nexport const PreloaderSVG = () => {\r\n    return (\r\n        <div className={styles.mainFader}>\r\n            <div className={styles.loader}>\r\n                <svg viewBox=\"0 0 866 866\">\r\n                    <svg id=\"Layer_1\" data-name=\"Layer 1\" viewBox=\"0 0 164.83 151.5\">\r\n                        <path className={styles.path0}\r\n                              d=\"M117.24,69.24A8,8,0,0,0,115.67,67c-4.88-4-9.8-7.89-14.86-11.62A4.93,4.93,0,0,0,96.93,55c-5.76,1.89-11.4,4.17-17.18,6a4.36,4.36,0,0,0-3.42,4.12c-1,6.89-2.1,13.76-3,20.66a4,4,0,0,0,1,3.07c5.12,4.36,10.39,8.61,15.68,12.76a3.62,3.62,0,0,0,2.92.75c6.29-2.66,12.52-5.47,18.71-8.36a3.49,3.49,0,0,0,1.68-2.19c1.34-7.25,2.54-14.55,3.9-22.58Z\"\r\n                              fill=\"#40c456\"/>\r\n                        <path className={styles.path1}\r\n                              d=\"M97.55,38.68A43.76,43.76,0,0,1,98,33.44c.41-2.36-.5-3.57-2.57-4.64C91.1,26.59,87,24,82.66,21.82a6.18,6.18,0,0,0-4-.71C73.45,22.55,68.32,24.25,63.22,26c-3.63,1.21-6.08,3.35-5.76,7.69a26.67,26.67,0,0,1-.6,4.92c-1.08,8.06-1.08,8.08,5.86,11.92,3.95,2.19,7.82,5.75,11.94,6.08s8.76-2.41,13.12-3.93c9.33-3.29,9.33-3.3,9.78-14Z\"\r\n                              fill=\"#40c456\"/>\r\n                        <path className={styles.path2}\r\n                              d=\"M66.11,126.56c5.91-.91,11.37-1.7,16.81-2.71a3.3,3.3,0,0,0,1.87-2.17c1-4.06,1.73-8.19,2.84-12.24.54-2-.11-3-1.55-4.15-5-4-9.9-8.12-15-12a6.19,6.19,0,0,0-4.15-1.1c-5.35.66-10.7,1.54-16,2.54A4,4,0,0,0,48.34,97a109.13,109.13,0,0,0-3,12.19,4.47,4.47,0,0,0,1.34,3.6c5.54,4.36,11.23,8.53,16.91,12.69a10.84,10.84,0,0,0,2.57,1.11Z\"\r\n                              fill=\"#40c456\"/>\r\n                        <path className={styles.path3}\r\n                              d=\"M127.42,104.12c4.1-2.1,8-3.93,11.72-6a6,6,0,0,0,2.27-3,58.22,58.22,0,0,0,3.18-29.92c-.26-1.7-8-7.28-9.71-6.85A5,5,0,0,0,133,59.65c-2.81,2.49-5.71,4.88-8.33,7.56a9.46,9.46,0,0,0-2.47,4.4c-1.29,6.49-2.38,13-3.35,19.55a5.73,5.73,0,0,0,.83,3.91c2.31,3.08,5,5.88,7.7,9Z\"\r\n                              fill=\"#40c456\"/>\r\n                        <path className={styles.path4}\r\n                              d=\"M52.58,29.89c-2.15-.36-3.78-.54-5.39-.9-2.83-.64-4.92.1-7,2.32A64.1,64.1,0,0,0,26.09,54.64c-2.64,7.92-2.62,7.84,5.15,10.87,1.76.69,2.73.45,3.93-1C39.79,59,44.54,53.65,49.22,48.2a4.2,4.2,0,0,0,1.13-2c.8-5.32,1.49-10.68,2.24-16.34Z\"\r\n                              fill=\"#40c456\"/>\r\n                        <path className={styles.path5} fill=\"#40c456\"\r\n                              d=\"M23,68.13c0,2.51,0,4.7,0,6.87a60.49,60.49,0,0,0,9.75,32.15c1.37,2.13,6.4,3,7,1.2,1.55-5,2.68-10.2,3.82-15.34.13-.58-.58-1.38-.94-2.06-2.51-4.77-5.47-9.38-7.45-14.37C32.94,71,28.22,69.84,23,68.13Z\"/>\r\n                        <path className={styles.path6} fill=\"#40c456\"\r\n                              d=\"M83.91,12.86c-.32.36-.66.71-1,1.07.9,1.13,1.57,2.62,2.73,3.33,4.71,2.84,9.56,5.48,14.39,8.1a9.29,9.29,0,0,0,3.13.83c5.45.69,10.89,1.38,16.35,1.94a10.41,10.41,0,0,0,3.07-.71c-11.48-9.9-24.26-14.61-38.71-14.56Z\"\r\n                        />\r\n                        <path className={styles.path7} fill=\"#40c456\"\r\n                              d=\"M66.28,132.51c13.36,3.78,25.62,3.5,38-.9C91.68,129.59,79.36,128,66.28,132.51Z\"/>\r\n                        <path className={styles.path8} fill=\"#40c456\"\r\n                              d=\"M127.2,30.66l-1.27.37a18.58,18.58,0,0,0,1,3.08c3,5.52,6.21,10.89,8.89,16.54,1.34,2.83,3.41,3.82,6.49,4.9a60.38,60.38,0,0,0-15.12-24.9Z\"/>\r\n                        <path className=\"bb-9\" fill=\"#40c456\"\r\n                              d=\"M117.35,125c5.58-2.32,16.9-13.84,18.1-19.2-2.41,1.46-5.18,2.36-6.78,4.23-4.21,5-7.89,10.37-11.32,15Z\"/>\r\n                    </svg>\r\n                </svg>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {RootStateType} from '../../state/redux_store';\r\nimport {\r\n    FollowAC,\r\n    setCurrentPageAC,\r\n    setTotalUsersCountAC,\r\n    setUsersAC, toggleIsFetchingAC,\r\n    UnfollowAC,\r\n    UserType\r\n} from '../../state/reducers/users_reducer';\r\nimport {Dispatch} from 'redux';\r\nimport axios from 'axios';\r\nimport {UsersFC} from './UsersFC';\r\nimport {PreloaderSVG} from '../../common/Preloader/PreloaderSVG';\r\n\r\ntype MapStatePropsType = {\r\n    users: Array<UserType>\r\n    pagesSize: number\r\n    totalUsersCount: number\r\n    currentPage: number\r\n    isFetching: boolean\r\n}\r\n\r\ntype MapDispatchPropsType = {\r\n    follow: (userID: number) => void\r\n    unfollow: (userID: number) => void\r\n    setUsers: (users: Array<UserType>) => void\r\n    setCurrentPage: (currentPage: number) => void\r\n    setTotalUsersCount: (count: number) => void\r\n    toggleIsFetching: (isFetching: boolean) => void\r\n}\r\n\r\nexport type UsersPropsType = MapStatePropsType & MapDispatchPropsType\r\n\r\nclass Users extends React.Component<UsersPropsType> {\r\n\r\n    componentDidMount() {\r\n        this.props.toggleIsFetching(true)\r\n        axios.get(`https://social-network.samuraijs.com/api/1.0/users?page=${this.props.currentPage}&count=${this.props.pagesSize}`)\r\n            .then(response => {\r\n                this.props.toggleIsFetching(false)\r\n                this.props.setUsers(response.data.items);\r\n                this.props.setTotalUsersCount(response.data.totalCount);\r\n            })\r\n    }\r\n\r\n    onPageChanged = (pageNumber: number) => {\r\n        this.props.setCurrentPage(pageNumber)\r\n        this.props.toggleIsFetching(true)\r\n        axios.get(`https://social-network.samuraijs.com/api/1.0/users?page=${pageNumber}&count=${this.props.pagesSize}`)\r\n            .then(response => {\r\n                this.props.toggleIsFetching(false)\r\n                this.props.setUsers(response.data.items)\r\n            })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                {this.props.isFetching ? <PreloaderSVG/> : null}\r\n                <UsersFC users={this.props.users}\r\n                         pagesSize={this.props.pagesSize}\r\n                         totalUsersCount={this.props.totalUsersCount}\r\n                         currentPage={this.props.currentPage}\r\n                         follow={this.props.follow}\r\n                         unfollow={this.props.unfollow}\r\n                         onPageChanged={this.onPageChanged}/>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state: RootStateType): MapStatePropsType => {\r\n    return ({\r\n        users: state.usersReducer.users,\r\n        pagesSize: state.usersReducer.pagesSize,\r\n        totalUsersCount: state.usersReducer.totalUsersCount,\r\n        currentPage: state.usersReducer.currentPage,\r\n        isFetching: state.usersReducer.isFetching\r\n    })\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch: Dispatch): MapDispatchPropsType => {\r\n    return {\r\n        follow: (userID) => {\r\n            dispatch(FollowAC(userID))\r\n        },\r\n        unfollow: (userID) => {\r\n            dispatch(UnfollowAC(userID))\r\n        },\r\n        setUsers: (users) => {\r\n            dispatch(setUsersAC(users))\r\n        },\r\n        setCurrentPage: (currentPage) => {\r\n            dispatch(setCurrentPageAC(currentPage))\r\n        },\r\n        setTotalUsersCount: (count) => {\r\n            dispatch(setTotalUsersCountAC(count))\r\n        },\r\n        toggleIsFetching: (isFetching) => {\r\n            dispatch(toggleIsFetchingAC(isFetching))\r\n        }\r\n    }\r\n}\r\n\r\nexport const UsersContainer = connect(mapStateToProps, mapDispatchToProps)(Users)","import React from 'react';\nimport './App.scss';\nimport Header from './components/Header/Header';\nimport Navbar from './components/Navbar/Navbar';\nimport Profile from './components/Profile/Profile';\nimport {BrowserRouter, Redirect, Route, Switch} from 'react-router-dom';\nimport {MessagesContainer} from './components/Messages/MessagesContainer';\nimport {UsersContainer} from './components/Users/UsersContainer';\n\n\nfunction App() {\n    return (\n        <BrowserRouter>\n            <div className=\"App-wrapper\">\n                <Header/>\n                <Navbar/>\n                <section className=\"Content\">\n                    <Switch>\n                        <Route path=\"/profile\" render={() => <Profile />}/>\n                        <Route path=\"/messages\" render={() => <MessagesContainer/>}/>\n                        <Route path=\"/friends\" render={() => <UsersContainer/>}/>\n                        <Redirect to=\"/profile\"/>\n                    </Switch>\n                </section>\n            </div>\n        </BrowserRouter>\n    );\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport React from 'react';\nimport './index.scss';\nimport {store} from './state/redux_store';\nimport App from './App';\nimport {Provider} from 'react-redux';\n\nReactDOM.render(\n    <React.StrictMode>\n        <Provider store={store}>\n            <App/>\n        </Provider>\n    </React.StrictMode>,\n    document.getElementById('root')\n);"],"sourceRoot":""}