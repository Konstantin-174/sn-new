{"version":3,"sources":["components/Navbar/Navbar.module.scss","components/Profile/profileInfo/ProfileInfo.module.scss","components/Messages/Messages.module.scss","components/Profile/posts/post/Post.module.scss","components/Profile/avatar/Avatar.module.scss","components/Header/Header.module.scss","components/Profile/posts/MyPosts.module.scss","components/Profile/Profile.module.scss","components/Messages/conversation/Conversation.module.scss","components/Messages/message/MessageRequest.module.scss","components/Messages/message/MessageResponse.module.scss","state/reducers/dialogs_reducer.ts","state/reducers/profile_reducer.ts","state/redux_store.ts","components/Header/Header.tsx","components/Navbar/Navbar.tsx","components/Profile/avatar/img/IRh4RWeX.jpg","components/Profile/avatar/Avatar.tsx","components/Profile/profileInfo/ProfileInfo.tsx","components/Profile/posts/post/img/ghML0mY_.jpg","components/Profile/posts/post/Post.tsx","components/Profile/posts/MyPosts.tsx","components/Profile/posts/MyPostsContainer.tsx","components/Profile/Profile.tsx","components/Messages/message/MessageRequest.tsx","components/Messages/message/MessageResponse.tsx","components/Messages/conversation/Conversation.tsx","components/Messages/DialogLink.tsx","components/Messages/Messages.tsx","components/Messages/MessagesContainer.tsx","App.tsx","index.tsx"],"names":["module","exports","initialState","dialogs","id","v1","name","messages","text","newMessageText","posts","likes","newPostText","reducers","combineReducers","profileReducer","state","action","type","newPost","postMessage","push","newText","dialogsReducer","newMessage","message","store","createStore","Header","className","local","headerWrap","href","headLogo","logo","size","headContent","Navbar","navWrap","navContent","to","link","activeClassName","active","navIcon","navText","Avatar","avaWrap","avaImg","ava","src","img","alt","avaSettings","avaBtn","ProfileInfo","infoWrap","infoItem","itemTitle","itemDescription","descriptionText","Post","props","postWrap","postAutor","postContent","postText","postLikes","likeIcon","likesCount","MyPosts","postsEl","map","post","postsWrap","inputPost","inputArea","value","onChange","newTextChangeHandler","placeholder","onClick","addPost","inputBtn","MyPostsContainer","dispatch","currentTarget","Profile","profileWrap","avaDiscript","profilePage","MessageRequest","messageWrap","MessageResponse","Conversation","newMessageEl","conversationWrap","DialogLink","messagesLink","linkTitle","Messages","dialogsEl","dialog","messagesWrap","dialogsInner","friendsMessages","messagesContent","messageInput","newMessageChangeHandler","addMessage","MessagesContainer","el","App","getState","path","render","bind","rerenderTree","ReactDOM","StrictMode","document","getElementById","subscribe"],"mappings":"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","file":"static/js/main.59a186d9.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"navWrap\":\"Navbar_navWrap__2lMxZ\",\"navContent\":\"Navbar_navContent__1pH8x\",\"active\":\"Navbar_active__1gdX1\",\"link\":\"Navbar_link__3jgJz\",\"navIcon\":\"Navbar_navIcon__3jRcb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"infoWrap\":\"ProfileInfo_infoWrap__XdM_I\",\"infoItem\":\"ProfileInfo_infoItem__2XvJw\",\"itemTitle\":\"ProfileInfo_itemTitle__ri-Hf\",\"itemDescription\":\"ProfileInfo_itemDescription__YLoNv\",\"descriptionText\":\"ProfileInfo_descriptionText__2OkD6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"messagesWrap\":\"Messages_messagesWrap__37gEB\",\"dialogsInner\":\"Messages_dialogsInner__2Zvw1\",\"friendsMessages\":\"Messages_friendsMessages__rSgKe\",\"active\":\"Messages_active__2mhrg\",\"messagesLink\":\"Messages_messagesLink__2lvm6\",\"linkTitle\":\"Messages_linkTitle__3ukLt\",\"messagesContent\":\"Messages_messagesContent__7FsKi\",\"messageInput\":\"Messages_messageInput__1tQzY\",\"inputArea\":\"Messages_inputArea__1Ncb4\",\"inputBtn\":\"Messages_inputBtn__R5nkW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postWrap\":\"Post_postWrap__36rVA\",\"postAutor\":\"Post_postAutor__2HhnX\",\"postContent\":\"Post_postContent__1gaiv\",\"ava\":\"Post_ava__1XJR6\",\"postText\":\"Post_postText__bdGV0\",\"postLikes\":\"Post_postLikes__3eEag\",\"likeIcon\":\"Post_likeIcon__1RECh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"avaWrap\":\"Avatar_avaWrap__3USAx\",\"avaImg\":\"Avatar_avaImg__2JcdS\",\"ava\":\"Avatar_ava__30Ywd\",\"avaSettings\":\"Avatar_avaSettings__1Pk7T\",\"avaBtn\":\"Avatar_avaBtn__1Zhom\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"headerWrap\":\"Header_headerWrap__jGDDN\",\"headLogo\":\"Header_headLogo__X9m-A\",\"headContent\":\"Header_headContent__33_HY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsWrap\":\"MyPosts_postsWrap__1nK8b\",\"inputPost\":\"MyPosts_inputPost__3jVO-\",\"inputArea\":\"MyPosts_inputArea__2mtLL\",\"inputBtn\":\"MyPosts_inputBtn__q0Ses\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profileWrap\":\"Profile_profileWrap__3RtKc\",\"avaDiscript\":\"Profile_avaDiscript__2dUNC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"conversationWrap\":\"Conversation_conversationWrap__16jRU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"messageWrap\":\"MessageRequest_messageWrap__2DvZF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"messageWrap\":\"MessageResponse_messageWrap__2PKcS\"};","import {v1} from 'uuid';\r\nimport {\r\n    AddMessageActionType,\r\n    AddPostActionType,\r\n    ChangeNewMessageActionType, ChangeNewTextActionType,\r\n    DialogsPageType,\r\n    MessageType\r\n} from '../store';\r\n\r\nconst initialState = {\r\n    dialogs: [\r\n        {\r\n            id: v1(),\r\n            name: 'Amy Wong'\r\n        },\r\n        {\r\n            id: v1(),\r\n            name: 'Zapp Brannigan'\r\n        },\r\n        {\r\n            id: v1(),\r\n            name: 'John D. Zoidberg'\r\n        },\r\n        {\r\n            id: v1(),\r\n            name: 'Turanga Leela'\r\n        },\r\n        {\r\n            id: v1(),\r\n            name: 'Hubert J. Farnsworth'\r\n        },\r\n    ],\r\n    messages: [\r\n        {\r\n            id: v1(),\r\n            text: 'Hi! How are you?'\r\n        },\r\n        {\r\n            id: v1(),\r\n            text: 'Hi! I\\'m fine, thanks!'\r\n        }\r\n    ],\r\n    newMessageText: ''\r\n}\r\n\r\nexport const dialogsReducer = (state: DialogsPageType = initialState, action: AddPostActionType | ChangeNewTextActionType | AddMessageActionType | ChangeNewMessageActionType) => {\r\n\r\n    switch (action.type) {\r\n        case \"ADD-MESSAGE\":\r\n            state.newMessageText = \"\";\r\n            const newMessage: MessageType = {\r\n                id: v1(),\r\n                text: action.message\r\n            }\r\n            state.messages.push(newMessage);\r\n            return state;\r\n        case \"CHANGE-NEW-MESSAGE\":\r\n            state.newMessageText = action.newMessage;\r\n            return state;\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n// === ACTION CREATORS ===\r\nexport const addMessageAC = (message: string): AddMessageActionType => {\r\n    return {\r\n        type: \"ADD-MESSAGE\",\r\n        message: message\r\n    }\r\n}\r\n\r\nexport const changeNewMessageAC = (newMessage: string): ChangeNewMessageActionType => {\r\n    return {\r\n        type: \"CHANGE-NEW-MESSAGE\",\r\n        newMessage: newMessage\r\n    }\r\n}\r\n\r\n// === / ACTION CREATORS ===","import {v1} from 'uuid';\r\nimport {\r\n    AddMessageActionType,\r\n    AddPostActionType,\r\n    ChangeNewMessageActionType,\r\n    ChangeNewTextActionType,\r\n    PostsType,\r\n    ProfilePageType\r\n} from '../store';\r\n\r\nconst initialState = {\r\n    posts: [\r\n        {\r\n            id: v1(),\r\n            name: 'Philip J. Fry',\r\n            text: 'Phew! What a terrible dream I had! I will never sleep again!',\r\n            likes: 12\r\n        },\r\n        {\r\n            id: v1(),\r\n            name: 'John D. Zoidberg',\r\n            text: 'What\\'s up?',\r\n            likes: 5\r\n        },\r\n        {\r\n            id: v1(),\r\n            name: 'Turanga Leela',\r\n            text: 'Have you run out of idiotic thoughts?',\r\n            likes: 24\r\n        },\r\n    ],\r\n        newPostText: ''\r\n}\r\n\r\n\r\nexport const profileReducer = (state: ProfilePageType = initialState, action: AddPostActionType | ChangeNewTextActionType | AddMessageActionType | ChangeNewMessageActionType) => {\r\n    switch (action.type){\r\n        case \"ADD-POST\":\r\n            state.newPostText = \"\";\r\n            const newPost: PostsType = {\r\n                id: v1(),\r\n                name: '%@User_name@%',\r\n                text: action.postMessage,\r\n                likes: 0\r\n            }\r\n            state.posts.push(newPost)\r\n            return state;\r\n        case \"CHANGE-NEW-TEXT\":\r\n            state.newPostText = action.newText;\r\n            return state;\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n// === ACTION CREATORS ===\r\nexport const addPostAC = (postText: string): AddPostActionType => {\r\n    return {\r\n        type: \"ADD-POST\",\r\n        postMessage: postText\r\n    }\r\n}\r\n\r\nexport const changeNewTextAC = (newText: string): ChangeNewTextActionType => {\r\n    return {\r\n        type: \"CHANGE-NEW-TEXT\",\r\n        newText: newText\r\n    }\r\n}\r\n\r\n// === / ACTION CREATORS ===","import {combineReducers, createStore } from \"redux\";\r\nimport {dialogsReducer} from './reducers/dialogs_reducer';\r\nimport {profileReducer} from './reducers/profile_reducer';\r\n\r\nconst reducers = combineReducers({\r\n    profileReducer,\r\n    dialogsReducer\r\n})\r\n\r\nexport const store = createStore(reducers);\r\n\r\nexport type RootStoreType = typeof store","import React from 'react';\r\nimport local from './Header.module.scss';\r\nimport {DiLinux} from \"react-icons/di\";\r\n\r\nconst Header = () => {\r\n    return (\r\n        <header className={local.headerWrap}>\r\n            <a href=\"#\" className={local.headLogo}>\r\n                <DiLinux className={local.logo} size=\"2em\" />\r\n            </a>\r\n            <div className={local.headContent}>Welcome to my SocialNetwork</div>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport local from './Navbar.module.scss';\r\nimport { BsFillGrid1X2Fill, BsFillChatFill,\r\n    BsPeopleFill, BsFillExclamationSquareFill } from \"react-icons/bs\";\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst Navbar = () => {\r\n    return (\r\n        <section className={local.navWrap}>\r\n            <div className={local.navContent}>\r\n                <NavLink to=\"/profile\" className={local.link} activeClassName={local.active}>\r\n                    <BsFillGrid1X2Fill className={local.navIcon}/>\r\n                    <div  className={local.navText}>\r\n                        Profile\r\n                    </div>\r\n                </NavLink>\r\n                <NavLink to=\"/messages\" className={local.link} activeClassName={local.active}>\r\n                    <BsFillChatFill className={local.navIcon}/>\r\n                    <div className={local.navText}>\r\n                        Messages\r\n                    </div>\r\n                </NavLink>\r\n                <NavLink to=\"/friends\" className={local.link} activeClassName={local.active}>\r\n                    <BsPeopleFill className={local.navIcon}/>\r\n                    <div className={local.navText}>\r\n                        Friends\r\n                    </div>\r\n                </NavLink>\r\n                <NavLink to=\"/news\" className={local.link} activeClassName={local.active}>\r\n                    <BsFillExclamationSquareFill className={local.navIcon}/>\r\n                    <div className={local.navText}>\r\n                        News\r\n                    </div>\r\n                </NavLink>\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default Navbar;","export default __webpack_public_path__ + \"static/media/IRh4RWeX.c1850cca.jpg\";","import React from 'react';\r\nimport local from './Avatar.module.scss';\r\nimport img from './img/IRh4RWeX.jpg';\r\n\r\nconst Avatar = () => {\r\n    return (\r\n        <section className={local.avaWrap}>\r\n            <div className={local.avaImg}>\r\n                <img className={local.ava} src={img} alt=\"Avatar\"/>\r\n            </div>\r\n            <div className={local.avaSettings}>\r\n                <button className={local.avaBtn}>\r\n                    Edit\r\n                </button>\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default Avatar;","import React from 'react';\r\nimport local from './ProfileInfo.module.scss';\r\n\r\nconst ProfileInfo = () => {\r\n    return (\r\n        <section className={local.infoWrap}>\r\n            <div className={local.infoItem}>\r\n                <div className={local.itemTitle}>\r\n                    Name\r\n                </div>\r\n                <div className={local.itemDescription}>\r\n                    Bender Rodriguez\r\n                </div>\r\n            </div>\r\n            <div className={local.infoItem}>\r\n                <div className={local.itemTitle}>\r\n                    Birth\r\n                </div>\r\n                <div className={local.itemDescription}>\r\n                    10/11/1989\r\n                </div>\r\n            </div>\r\n            <div className={local.infoItem}>\r\n                <div className={local.itemTitle}>\r\n                    Education\r\n                </div>\r\n                <div className={local.itemDescription}>\r\n                    University degree\r\n                </div>\r\n            </div>\r\n            <div className={local.infoItem}>\r\n                <div className={local.itemTitle}>\r\n                    Quotes\r\n                </div>\r\n                <div className={local.itemDescription}>\r\n                    <div className={local.descriptionText}>\r\n                        \"I'm going to build my own theme park! With blackjack! And hookers!\"\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default ProfileInfo;","export default __webpack_public_path__ + \"static/media/ghML0mY_.02012f6e.jpg\";","import React from 'react';\r\nimport local from './Post.module.scss';\r\nimport img from './img/ghML0mY_.jpg';\r\nimport { AiFillLike } from \"react-icons/ai\";\r\n\r\ntype PostType = {\r\n    name: string\r\n    text: string\r\n    likes: number\r\n}\r\n\r\nconst Post = (props: PostType) => {\r\n    return (\r\n        <section className={local.postWrap}>\r\n            <div className={local.postAutor}>\r\n                {props.name}\r\n            </div>\r\n            <div className={local.postContent}>\r\n                <div className={local.ava}>\r\n                    <img src={img} alt=\"Avatar\"/>\r\n                </div>\r\n                <div className={local.postText}>\r\n                    &#8220;{props.text}&#8221;\r\n                </div>\r\n            </div>\r\n            <div className={local.postLikes}>\r\n                <AiFillLike className={local.likeIcon}/>\r\n                <div className={local.likesCount}>\r\n                    {props.likes}\r\n                </div>\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default Post;","import React, {ChangeEvent} from 'react';\r\nimport local from './MyPosts.module.scss'\r\nimport {BsBoxArrowInDown} from 'react-icons/bs';\r\nimport Post from './post/Post';\r\nimport {PostsType} from '../../../state/store';\r\n\r\ntype MyPostsPropsType = {\r\n    posts: Array<PostsType>\r\n    newPost: string\r\n    addPost: () => void\r\n    newTextChangeHandler: (text: ChangeEvent<HTMLInputElement>) => void\r\n}\r\n\r\nconst MyPosts = (props: MyPostsPropsType) => {\r\n\r\n    let postsEl = props.posts.map((post) => <Post key={post.id}\r\n                                                  name={post.name}\r\n                                                  text={post.text}\r\n                                                  likes={post.likes}/>)\r\n\r\n    const onPostChange = (text: ChangeEvent<HTMLInputElement>) => {\r\n        props.newTextChangeHandler(text)\r\n    }\r\n\r\n    return (\r\n        <section className={local.postsWrap}>\r\n            <div className={local.inputPost}>\r\n                <div className={local.inputArea}>\r\n                    <input type=\"text\"\r\n                           value={props.newPost}\r\n                           onChange={onPostChange}\r\n                           placeholder=\"Enter your message\"\r\n                    />\r\n                </div>\r\n                <BsBoxArrowInDown onClick={props.addPost}\r\n                                  className={local.inputBtn} size=\"2em\"\r\n                />\r\n            </div>\r\n            {postsEl}\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default MyPosts;\r\n","import React, {ChangeEvent} from 'react';\r\nimport {\r\n    AddPostActionType,\r\n    ChangeNewTextActionType,\r\n    PostsType\r\n} from '../../../state/store';\r\nimport {addPostAC, changeNewTextAC} from '../../../state/reducers/profile_reducer';\r\nimport MyPosts from './MyPosts';\r\n\r\ntype MyPostsPropsType = {\r\n    posts: Array<PostsType>\r\n    newPost: string\r\n    dispatch: (action: AddPostActionType | ChangeNewTextActionType) => void\r\n}\r\n\r\nexport const MyPostsContainer = (props: MyPostsPropsType) => {\r\n\r\n    const onAddPost = () => {\r\n        props.dispatch(addPostAC(props.newPost)) //props.newPost\r\n    }\r\n\r\n    const onNewTextChangeHandler = (text: ChangeEvent<HTMLInputElement>) => props.dispatch(changeNewTextAC(text.currentTarget.value))\r\n\r\n    return <MyPosts posts={props.posts}\r\n                 addPost={onAddPost}\r\n                 newPost={props.newPost}\r\n                 newTextChangeHandler={onNewTextChangeHandler}\r\n        />\r\n}","import React from 'react';\r\nimport local from './Profile.module.scss'\r\nimport Avatar from './avatar/Avatar';\r\nimport ProfileInfo from './profileInfo/ProfileInfo';\r\nimport {AddPostActionType, ChangeNewTextActionType, ProfilePageType} from '../../state/store';\r\nimport {MyPostsContainer} from './posts/MyPostsContainer';\r\n\r\ntype ProfilePropsType = {\r\n    profilePage: ProfilePageType\r\n    dispatch: (action: AddPostActionType | ChangeNewTextActionType) => void\r\n}\r\n\r\nconst Profile = (props: ProfilePropsType) => {\r\n    return (\r\n        <section className={local.profileWrap}>\r\n          <div className={local.avaDiscript}>\r\n              <Avatar/>\r\n              <ProfileInfo/>\r\n          </div>\r\n            <MyPostsContainer posts={props.profilePage.posts}\r\n                     newPost={props.profilePage.newPostText}\r\n                     dispatch={props.dispatch}\r\n            />\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default Profile;","import React from 'react';\r\nimport local from './MessageRequest.module.scss';\r\n\r\ntype MessageRequestPropsType = {\r\n    message: string\r\n}\r\n\r\nconst MessageRequest = (props: MessageRequestPropsType) => {\r\n    return (\r\n        <section className={local.messageWrap}>\r\n            {props.message}\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default MessageRequest;","import React from 'react';\r\nimport local from './MessageResponse.module.scss';\r\n\r\ntype MessageResponsePropsType = {\r\n    message: string\r\n}\r\n\r\nconst MessageResponse = (props: MessageResponsePropsType) => {\r\n    return (\r\n        <section className={local.messageWrap}>\r\n            {props.message}\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default MessageResponse;","import React from 'react';\r\nimport local from './Conversation.module.scss';\r\nimport MessageRequest from '../message/MessageRequest';\r\nimport MessageResponse from '../message/MessageResponse';\r\nimport {MessageType} from '../../../state/store';\r\n\r\ntype ConversationType = {\r\n    message: Array<MessageType>\r\n}\r\n\r\nconst Conversation = (props: ConversationType) => {\r\n\r\n    const newMessageEl = props.message.map((message:MessageType) => <MessageResponse key={message.id}\r\n                                                                                     message={message.text}/>)\r\n\r\n    return (\r\n        <section className={local.conversationWrap}>\r\n            <MessageRequest message={props.message[0].text}/>\r\n            {newMessageEl}\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default Conversation;","import {NavLink} from 'react-router-dom';\r\nimport local from './Messages.module.scss';\r\nimport React from 'react';\r\n\r\ntype DialogsLinkPropsType = {\r\n    id: string\r\n    name: string\r\n}\r\n\r\nconst DialogLink = (props: DialogsLinkPropsType) => {\r\n    return (\r\n        <NavLink to={'/messages/conversation/' + props.id}\r\n                 className={local.messagesLink}\r\n                 activeClassName={local.active}\r\n        >\r\n            <div className={local.linkTitle}>{props.name}</div>\r\n        </NavLink>\r\n    )\r\n}\r\n\r\nexport default DialogLink;\r\n\r\n","import React, {ChangeEvent} from 'react';\r\nimport local from './Messages.module.scss'\r\nimport {BsBoxArrowInUp} from 'react-icons/bs';\r\nimport Conversation from './conversation/Conversation';\r\nimport DialogLink from './DialogLink';\r\nimport {DialogsPageType,DialogsType} from '../../state/store';\r\n\r\ntype MessagesPropsType = {\r\n    dialogs: DialogsPageType\r\n    newMessage: string\r\n    newMessageChangeHandler: (text: ChangeEvent<HTMLInputElement>) => void\r\n    addMessage: () => void\r\n}\r\n\r\nconst Messages = (props: MessagesPropsType) => {\r\n\r\n    let dialogsEl = props.dialogs.dialogs.map( (dialog:DialogsType) => <DialogLink key={dialog.id}\r\n                                                                       id={dialog.id}\r\n                                                                       name={dialog.name}/>)\r\n\r\n    const newMessageChangeHandler = (text: ChangeEvent<HTMLInputElement>) => props.newMessageChangeHandler(text)\r\n\r\n    return (\r\n        <section className={local.messagesWrap}>\r\n            <div className={local.dialogsInner}>\r\n                <div className={local.friendsMessages}>\r\n                    { dialogsEl }\r\n                </div>\r\n                <div className={local.messagesContent}>\r\n                    <Conversation message={props.dialogs.messages}/>\r\n                </div>\r\n            </div>\r\n            <div className={local.messageInput}>\r\n                <div className={local.inputArea}>\r\n                    <input type=\"text\"\r\n                           value={props.newMessage}\r\n                           onChange={newMessageChangeHandler}\r\n                           placeholder=\"Enter your message\"\r\n                    />\r\n                </div>\r\n                <BsBoxArrowInUp className={local.inputBtn}\r\n                                size=\"2em\" onClick={props.addMessage}\r\n                />\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default Messages;","import React, {ChangeEvent} from 'react';\r\nimport {\r\n    AddMessageActionType,\r\n    ChangeNewMessageActionType, DialogsPageType,\r\n} from '../../state/store';\r\nimport {addMessageAC, changeNewMessageAC} from '../../state/reducers/dialogs_reducer';\r\nimport Messages from './Messages';\r\n\r\ntype MessagesPropsType = {\r\n    dialogs: DialogsPageType\r\n    dispatch: (action: AddMessageActionType | ChangeNewMessageActionType) => void\r\n}\r\n\r\nconst MessagesContainer = (props: MessagesPropsType) => {\r\n    const onAddMessage = () => {\r\n        props.dispatch(addMessageAC(props.dialogs.newMessageText)) //props.newMessage\r\n    }\r\n\r\n    const onNewMessageChangeHandler = (el: ChangeEvent<HTMLInputElement>) => props.dispatch(changeNewMessageAC(el.currentTarget.value))\r\n\r\n    return <Messages newMessage={props.dialogs.newMessageText}\r\n                  dialogs={props.dialogs}\r\n                  addMessage={onAddMessage}\r\n                  newMessageChangeHandler={onNewMessageChangeHandler}\r\n        />\r\n}\r\n\r\nexport default MessagesContainer;","import React from 'react';\nimport './App.scss';\nimport Header from './components/Header/Header';\nimport Navbar from './components/Navbar/Navbar';\nimport Profile from './components/Profile/Profile';\nimport {BrowserRouter, Redirect, Route, Switch} from 'react-router-dom';\nimport {RootStoreType} from './state/redux_store';\nimport MessagesContainer from './components/Messages/MessagesContainer';\n\ntype AppPropsType = {\n    store: RootStoreType\n}\n\nfunction App(props: AppPropsType) {\n\n    const state = props.store.getState();\n\n    return (\n        <BrowserRouter>\n            <div className=\"App-wrapper\">\n                <Header/>\n                <Navbar/>\n                <section className=\"Content\">\n                    <Switch>\n                        <Route path=\"/profile\" render={() => <Profile profilePage={state.profileReducer}\n                                                                      dispatch={props.store.dispatch.bind(props.store)}/>}/>\n                        <Route path=\"/messages\" render={() => <MessagesContainer dialogs={state.dialogsReducer}\n                                                                                 dispatch={props.store.dispatch.bind(props.store)}/>}/>\n                        <Redirect to=\"/profile\"/>\n                    </Switch>\n                </section>\n            </div>\n        </BrowserRouter>\n    );\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport React from 'react';\nimport './index.scss';\nimport {store} from './state/redux_store';\nimport App from './App';\n\nexport const rerenderTree = () => {\n    ReactDOM.render(\n        <React.StrictMode>\n            <App store={store}/>\n        </React.StrictMode>,\n        document.getElementById('root')\n    );\n}\n\nstore.subscribe(() => {\n    rerenderTree()\n});\nrerenderTree();\n"],"sourceRoot":""}