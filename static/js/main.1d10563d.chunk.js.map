{"version":3,"sources":["components/Navbar/Navbar.module.scss","components/Profile/profileInfo/ProfileInfo.module.scss","components/Messages/Messages.module.scss","components/Profile/posts/post/Post.module.scss","components/Profile/avatar/Avatar.module.scss","components/Header/Header.module.scss","components/Profile/posts/MyPosts.module.scss","components/Profile/Profile.module.scss","components/Messages/conversation/Conversation.module.scss","components/Messages/message/MessageRequest.module.scss","components/Messages/message/MessageResponse.module.scss","state/store.ts","components/Header/Header.tsx","components/Navbar/Navbar.tsx","components/Messages/message/MessageRequest.tsx","components/Messages/message/MessageResponse.tsx","components/Messages/conversation/Conversation.tsx","components/Messages/DialogLink.tsx","components/Messages/Messages.tsx","components/Profile/avatar/img/IRh4RWeX.jpg","components/Profile/avatar/Avatar.tsx","components/Profile/profileInfo/ProfileInfo.tsx","components/Profile/posts/post/img/ghML0mY_.jpg","components/Profile/posts/post/Post.tsx","components/Profile/posts/MyPosts.tsx","components/Profile/Profile.tsx","App.tsx","index.tsx"],"names":["module","exports","store","_state","profilePage","posts","id","v1","name","text","likes","newPostText","dialogsPage","dialogs","messages","newMessageText","_render","rerenderTree","getState","this","subscribe","callback","dispatch","action","type","newPost","postMessage","push","newText","newMessage","message","Header","className","local","headerWrap","href","headLogo","logo","size","headContent","Navbar","navWrap","navContent","to","link","activeClassName","active","navIcon","navText","MessageRequest","props","messageWrap","MessageResponse","Conversation","newMessageEl","map","conversationWrap","DialogLink","messagesLink","linkTitle","Messages","dialogsEl","dialog","messagesWrap","dialogsInner","friendsMessages","messagesContent","messageInput","inputArea","value","onChange","el","currentTarget","inputBtn","onClick","Avatar","avaWrap","avaImg","ava","src","img","alt","avaSettings","avaBtn","ProfileInfo","infoWrap","infoItem","itemTitle","itemDescription","descriptionText","Post","postWrap","postAutor","postContent","postText","postLikes","likeIcon","likesCount","MyPosts","postsEl","post","postsWrap","inputPost","Profile","profileWrap","avaDiscript","App","state","path","render","bind","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1d10563d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"navWrap\":\"Navbar_navWrap__2lMxZ\",\"navContent\":\"Navbar_navContent__1pH8x\",\"active\":\"Navbar_active__1gdX1\",\"link\":\"Navbar_link__3jgJz\",\"navIcon\":\"Navbar_navIcon__3jRcb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"infoWrap\":\"ProfileInfo_infoWrap__XdM_I\",\"infoItem\":\"ProfileInfo_infoItem__2XvJw\",\"itemTitle\":\"ProfileInfo_itemTitle__ri-Hf\",\"itemDescription\":\"ProfileInfo_itemDescription__YLoNv\",\"descriptionText\":\"ProfileInfo_descriptionText__2OkD6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"messagesWrap\":\"Messages_messagesWrap__37gEB\",\"dialogsInner\":\"Messages_dialogsInner__2Zvw1\",\"friendsMessages\":\"Messages_friendsMessages__rSgKe\",\"active\":\"Messages_active__2mhrg\",\"messagesLink\":\"Messages_messagesLink__2lvm6\",\"linkTitle\":\"Messages_linkTitle__3ukLt\",\"messagesContent\":\"Messages_messagesContent__7FsKi\",\"messageInput\":\"Messages_messageInput__1tQzY\",\"inputArea\":\"Messages_inputArea__1Ncb4\",\"inputBtn\":\"Messages_inputBtn__R5nkW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postWrap\":\"Post_postWrap__36rVA\",\"postAutor\":\"Post_postAutor__2HhnX\",\"postContent\":\"Post_postContent__1gaiv\",\"ava\":\"Post_ava__1XJR6\",\"postText\":\"Post_postText__bdGV0\",\"postLikes\":\"Post_postLikes__3eEag\",\"likeIcon\":\"Post_likeIcon__1RECh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"avaWrap\":\"Avatar_avaWrap__3USAx\",\"avaImg\":\"Avatar_avaImg__2JcdS\",\"ava\":\"Avatar_ava__30Ywd\",\"avaSettings\":\"Avatar_avaSettings__1Pk7T\",\"avaBtn\":\"Avatar_avaBtn__1Zhom\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"headerWrap\":\"Header_headerWrap__jGDDN\",\"headLogo\":\"Header_headLogo__X9m-A\",\"headContent\":\"Header_headContent__33_HY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsWrap\":\"MyPosts_postsWrap__1nK8b\",\"inputPost\":\"MyPosts_inputPost__3jVO-\",\"inputArea\":\"MyPosts_inputArea__2mtLL\",\"inputBtn\":\"MyPosts_inputBtn__q0Ses\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profileWrap\":\"Profile_profileWrap__3RtKc\",\"avaDiscript\":\"Profile_avaDiscript__2dUNC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"conversationWrap\":\"Conversation_conversationWrap__16jRU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"messageWrap\":\"MessageRequest_messageWrap__2DvZF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"messageWrap\":\"MessageResponse_messageWrap__2PKcS\"};","import {v1} from 'uuid';\r\nimport {rerenderTree} from '../index';\r\n\r\n// === STATE TYPES ===\r\nexport type PostsType = {\r\n    id: string\r\n    name: string\r\n    text: string\r\n    likes: number\r\n}\r\n\r\nexport type DialogsType = {\r\n    id: string\r\n    name: string\r\n}\r\n\r\nexport type MessageType = {\r\n    id: string\r\n    text: string\r\n}\r\n\r\nexport type ProfilePageType = {\r\n    posts: Array<PostsType>\r\n    newPostText: string\r\n}\r\n\r\nexport type DialogsPageType = {\r\n    dialogs: Array<DialogsType>\r\n    messages: Array<MessageType>\r\n    newMessageText: string\r\n}\r\n\r\nexport type RootStateType = {\r\n    profilePage: ProfilePageType\r\n    dialogsPage: DialogsPageType\r\n}\r\n\r\nexport type StoreType = {\r\n    _state: RootStateType\r\n    _render: () => void\r\n    getState: () => RootStateType\r\n    subscribe: (callback: () => void) => void\r\n    dispatch: (action: AddPostActionType | ChangeNewTextActionType |\r\n        AddMessageActionType | ChangeNewMessageActionType) => void\r\n}\r\n// === / STATE TYPES ===\r\n\r\n// === DISPATCH TYPES ===\r\nexport type AddPostActionType = {\r\n    type: \"ADD-POST\"\r\n    postMessage: string\r\n}\r\n\r\nexport type ChangeNewTextActionType = {\r\n    type: \"CHANGE-NEW-TEXT\"\r\n    newText: string\r\n}\r\n\r\nexport type AddMessageActionType = {\r\n    type: \"ADD-MESSAGE\"\r\n    message: string\r\n}\r\n\r\nexport type ChangeNewMessageActionType = {\r\n    type: \"CHANGE-NEW-MESSAGE\"\r\n    newMessage: string\r\n}\r\n// === / DISPATCH TYPES ===\r\n\r\nexport const store: StoreType = {\r\n    _state: {\r\n        profilePage: {\r\n            posts: [\r\n                {\r\n                    id: v1(),\r\n                    name: 'Philip J. Fry',\r\n                    text: 'Phew! What a terrible dream I had! I will never sleep again!',\r\n                    likes: 12\r\n                },\r\n                {\r\n                    id: v1(),\r\n                    name: 'John D. Zoidberg',\r\n                    text: 'What\\'s up?',\r\n                    likes: 5\r\n                },\r\n                {\r\n                    id: v1(),\r\n                    name: 'Turanga Leela',\r\n                    text: 'Have you run out of idiotic thoughts?',\r\n                    likes: 24\r\n                },\r\n            ],\r\n            newPostText: ''\r\n        },\r\n        dialogsPage: {\r\n            dialogs: [\r\n                {\r\n                    id: v1(),\r\n                    name: 'Amy Wong'\r\n                },\r\n                {\r\n                    id: v1(),\r\n                    name: 'Zapp Brannigan'\r\n                },\r\n                {\r\n                    id: v1(),\r\n                    name: 'John D. Zoidberg'\r\n                },\r\n                {\r\n                    id: v1(),\r\n                    name: 'Turanga Leela'\r\n                },\r\n                {\r\n                    id: v1(),\r\n                    name: 'Hubert J. Farnsworth'\r\n                },\r\n            ],\r\n            messages: [\r\n                {\r\n                    id: v1(),\r\n                    text: 'Hi! How are you?'\r\n                },\r\n                {\r\n                    id: v1(),\r\n                    text: \"Hi! I'm fine, thanks!\"\r\n                }\r\n            ],\r\n            newMessageText: ''\r\n        }\r\n    },\r\n    _render() {\r\n        rerenderTree();\r\n    },\r\n\r\n    getState() {\r\n        return this._state;\r\n    },\r\n    subscribe(callback) {\r\n        this._render = callback;\r\n    },\r\n\r\n    dispatch(action) {\r\n        if (action.type === \"ADD-POST\") {\r\n            const newPost: PostsType = {\r\n                id: v1(),\r\n                name: '%@User_name@%',\r\n                text: action.postMessage,\r\n                likes: 0\r\n            }\r\n\r\n            this._state.profilePage.posts.push(newPost)\r\n            this._render();\r\n        } else if (action.type === \"CHANGE-NEW-TEXT\") {\r\n            this._state.profilePage.newPostText = action.newText;\r\n            this._render();\r\n        } else if (action.type === \"ADD-MESSAGE\") {\r\n            const newMessage: MessageType = {\r\n                id: v1(),\r\n                text: action.message\r\n            }\r\n            this._state.dialogsPage.messages.push(newMessage);\r\n            this._render();\r\n        } else if (action.type === \"CHANGE-NEW-MESSAGE\") {\r\n            this._state.dialogsPage.newMessageText = action.newMessage;\r\n            this._render();\r\n        }\r\n    }\r\n}\r\n","import React from 'react';\r\nimport local from './Header.module.scss';\r\nimport {DiLinux} from \"react-icons/di\";\r\n\r\nconst Header = () => {\r\n    return (\r\n        <header className={local.headerWrap}>\r\n            <a href=\"#\" className={local.headLogo}>\r\n                <DiLinux className={local.logo} size=\"2em\" />\r\n            </a>\r\n            <div className={local.headContent}>Welcome to my SocialNetwork</div>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport local from './Navbar.module.scss';\r\nimport { BsFillGrid1X2Fill, BsFillChatFill,\r\n    BsPeopleFill, BsFillExclamationSquareFill } from \"react-icons/bs\";\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst Navbar = () => {\r\n    return (\r\n        <section className={local.navWrap}>\r\n            <div className={local.navContent}>\r\n                <NavLink to=\"/profile\" className={local.link} activeClassName={local.active}>\r\n                    <BsFillGrid1X2Fill className={local.navIcon}/>\r\n                    <div  className={local.navText}>\r\n                        Profile\r\n                    </div>\r\n                </NavLink>\r\n                <NavLink to=\"/messages\" className={local.link} activeClassName={local.active}>\r\n                    <BsFillChatFill className={local.navIcon}/>\r\n                    <div className={local.navText}>\r\n                        Messages\r\n                    </div>\r\n                </NavLink>\r\n                <NavLink to=\"/friends\" className={local.link} activeClassName={local.active}>\r\n                    <BsPeopleFill className={local.navIcon}/>\r\n                    <div className={local.navText}>\r\n                        Friends\r\n                    </div>\r\n                </NavLink>\r\n                <NavLink to=\"/news\" className={local.link} activeClassName={local.active}>\r\n                    <BsFillExclamationSquareFill className={local.navIcon}/>\r\n                    <div className={local.navText}>\r\n                        News\r\n                    </div>\r\n                </NavLink>\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default Navbar;","import React from 'react';\r\nimport local from './MessageRequest.module.scss';\r\n\r\ntype MessageRequestPropsType = {\r\n    message: string\r\n}\r\n\r\nconst MessageRequest = (props: MessageRequestPropsType) => {\r\n    return (\r\n        <section className={local.messageWrap}>\r\n            {props.message}\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default MessageRequest;","import React from 'react';\r\nimport local from './MessageResponse.module.scss';\r\n\r\ntype MessageResponsePropsType = {\r\n    message: string\r\n}\r\n\r\nconst MessageResponse = (props: MessageResponsePropsType) => {\r\n    return (\r\n        <section className={local.messageWrap}>\r\n            {props.message}\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default MessageResponse;","import React from 'react';\r\nimport local from './Conversation.module.scss';\r\nimport MessageRequest from '../message/MessageRequest';\r\nimport MessageResponse from '../message/MessageResponse';\r\nimport {MessageType} from '../../../state/store';\r\n\r\ntype ConversationType = {\r\n    message: Array<MessageType>\r\n}\r\n\r\nconst Conversation = (props: ConversationType) => {\r\n\r\n    const newMessageEl = props.message.map((message:MessageType) => <MessageResponse key={message.id}\r\n                                                                                     message={message.text}/>)\r\n\r\n    return (\r\n        <section className={local.conversationWrap}>\r\n            <MessageRequest message={props.message[0].text}/>\r\n            {newMessageEl}\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default Conversation;","import {NavLink} from 'react-router-dom';\r\nimport local from './Messages.module.scss';\r\nimport React from 'react';\r\n\r\ntype DialogsLinkPropsType = {\r\n    id: string\r\n    name: string\r\n}\r\n\r\nconst DialogLink = (props: DialogsLinkPropsType) => {\r\n    return (\r\n        <NavLink to={'/messages/conversation/' + props.id}\r\n                 className={local.messagesLink}\r\n                 activeClassName={local.active}\r\n        >\r\n            <div className={local.linkTitle}>{props.name}</div>\r\n        </NavLink>\r\n    )\r\n}\r\n\r\nexport default DialogLink;\r\n\r\n","import React, {ChangeEvent} from 'react';\r\nimport local from './Messages.module.scss'\r\nimport {BsBoxArrowInUp} from 'react-icons/bs';\r\nimport Conversation from './conversation/Conversation';\r\nimport DialogLink from './DialogLink';\r\nimport {AddMessageActionType, ChangeNewMessageActionType, DialogsType, MessageType} from '../../state/store';\r\n\r\ntype MessagesPropsType = {\r\n    dialogs: Array<DialogsType>\r\n    messages: Array<MessageType>\r\n    newMessage: string\r\n    dispatch: (action: AddMessageActionType | ChangeNewMessageActionType) => void\r\n}\r\n\r\nconst Messages = (props: MessagesPropsType) => {\r\n\r\n    let dialogsEl = props.dialogs.map( (dialog:DialogsType) => <DialogLink key={dialog.id}\r\n                                                                       id={dialog.id}\r\n                                                                       name={dialog.name}/>)\r\n\r\n    const addMessage = () => {\r\n        props.dispatch({type: \"ADD-MESSAGE\", message: props.newMessage}) //props.newMessage\r\n        props.dispatch({type: \"CHANGE-NEW-MESSAGE\", newMessage: \"\"}) //el.currentTarget.value\r\n    }\r\n\r\n    const newMessageChangeHandler = (el: ChangeEvent<HTMLInputElement>) => props.dispatch({type: \"CHANGE-NEW-MESSAGE\", newMessage: el.currentTarget.value})\r\n\r\n    return (\r\n        <section className={local.messagesWrap}>\r\n            <div className={local.dialogsInner}>\r\n                <div className={local.friendsMessages}>\r\n                    { dialogsEl }\r\n                </div>\r\n                <div className={local.messagesContent}>\r\n                    <Conversation message={props.messages}/>\r\n                </div>\r\n            </div>\r\n            <div className={local.messageInput}>\r\n                <div className={local.inputArea}>\r\n                    <input type=\"text\"\r\n                           value={props.newMessage}\r\n                           onChange={newMessageChangeHandler}\r\n                    />\r\n                </div>\r\n                <BsBoxArrowInUp className={local.inputBtn}\r\n                                size=\"2em\" onClick={addMessage}\r\n                />\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default Messages;","export default __webpack_public_path__ + \"static/media/IRh4RWeX.c1850cca.jpg\";","import React from 'react';\r\nimport local from './Avatar.module.scss';\r\nimport img from './img/IRh4RWeX.jpg';\r\n\r\nconst Avatar = () => {\r\n    return (\r\n        <section className={local.avaWrap}>\r\n            <div className={local.avaImg}>\r\n                <img className={local.ava} src={img} alt=\"Avatar\"/>\r\n            </div>\r\n            <div className={local.avaSettings}>\r\n                <button className={local.avaBtn}>\r\n                    Edit\r\n                </button>\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default Avatar;","import React from 'react';\r\nimport local from './ProfileInfo.module.scss';\r\n\r\nconst ProfileInfo = () => {\r\n    return (\r\n        <section className={local.infoWrap}>\r\n            <div className={local.infoItem}>\r\n                <div className={local.itemTitle}>\r\n                    Name\r\n                </div>\r\n                <div className={local.itemDescription}>\r\n                    Bender Rodriguez\r\n                </div>\r\n            </div>\r\n            <div className={local.infoItem}>\r\n                <div className={local.itemTitle}>\r\n                    Birth\r\n                </div>\r\n                <div className={local.itemDescription}>\r\n                    10/11/1989\r\n                </div>\r\n            </div>\r\n            <div className={local.infoItem}>\r\n                <div className={local.itemTitle}>\r\n                    Education\r\n                </div>\r\n                <div className={local.itemDescription}>\r\n                    University degree\r\n                </div>\r\n            </div>\r\n            <div className={local.infoItem}>\r\n                <div className={local.itemTitle}>\r\n                    Quotes\r\n                </div>\r\n                <div className={local.itemDescription}>\r\n                    <div className={local.descriptionText}>\r\n                        \"I'm going to build my own theme park! With blackjack! And hookers!\"\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default ProfileInfo;","export default __webpack_public_path__ + \"static/media/ghML0mY_.02012f6e.jpg\";","import React from 'react';\r\nimport local from './Post.module.scss';\r\nimport img from './img/ghML0mY_.jpg';\r\nimport { AiFillLike } from \"react-icons/ai\";\r\n\r\ntype PostType = {\r\n    name: string\r\n    text: string\r\n    likes: number\r\n}\r\n\r\nconst Post = (props: PostType) => {\r\n    return (\r\n        <section className={local.postWrap}>\r\n            <div className={local.postAutor}>\r\n                {props.name}\r\n            </div>\r\n            <div className={local.postContent}>\r\n                <div className={local.ava}>\r\n                    <img src={img} alt=\"Avatar\"/>\r\n                </div>\r\n                <div className={local.postText}>\r\n                    &#8220;{props.text}&#8221;\r\n                </div>\r\n            </div>\r\n            <div className={local.postLikes}>\r\n                <AiFillLike className={local.likeIcon}/>\r\n                <div className={local.likesCount}>\r\n                    {props.likes}\r\n                </div>\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default Post;","import React, {ChangeEvent} from 'react';\r\nimport local from './MyPosts.module.scss'\r\nimport {BsBoxArrowInDown} from 'react-icons/bs';\r\nimport Post from './post/Post';\r\nimport {AddPostActionType, ChangeNewTextActionType, PostsType} from '../../../state/store';\r\n\r\ntype MyPostsPropsType = {\r\n    posts: Array<PostsType>\r\n    newPost: string\r\n    dispatch: (action: AddPostActionType | ChangeNewTextActionType) => void\r\n}\r\n\r\nconst MyPosts = (props: MyPostsPropsType) => {\r\n\r\n    let postsEl = props.posts.map((post) => <Post key={post.id}\r\n                                                  name={post.name}\r\n                                                  text={post.text}\r\n                                                  likes={post.likes}/>)\r\n\r\n    const addPost = () => {\r\n        props.dispatch({type: \"ADD-POST\", postMessage: props.newPost}) //props.newPost\r\n        props.dispatch({type: \"CHANGE-NEW-TEXT\", newText: \"\"}) //el.currentTarget.value\r\n    }\r\n\r\n    const newTextChangeHandler = (el: ChangeEvent<HTMLInputElement>) => props.dispatch({type: \"CHANGE-NEW-TEXT\", newText: el.currentTarget.value})\r\n\r\n    return (\r\n        <section className={local.postsWrap}>\r\n            <div className={local.inputPost}>\r\n                <div className={local.inputArea}>\r\n                    <input type=\"text\"\r\n                           value={props.newPost}\r\n                           onChange={newTextChangeHandler}\r\n                    />\r\n                </div>\r\n                <BsBoxArrowInDown onClick={addPost}\r\n                                  className={local.inputBtn} size=\"2em\"\r\n                />\r\n            </div>\r\n            {postsEl}\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default MyPosts;\r\n","import React from 'react';\r\nimport local from './Profile.module.scss'\r\nimport Avatar from './avatar/Avatar';\r\nimport ProfileInfo from './profileInfo/ProfileInfo';\r\nimport MyPosts from './posts/MyPosts';\r\nimport {AddPostActionType, ChangeNewTextActionType, ProfilePageType} from '../../state/store';\r\n\r\ntype ProfilePropsType = {\r\n    profilePage: ProfilePageType\r\n    dispatch: (action: AddPostActionType | ChangeNewTextActionType) => void\r\n}\r\n\r\nconst Profile = (props: ProfilePropsType) => {\r\n    return (\r\n        <section className={local.profileWrap}>\r\n          <div className={local.avaDiscript}>\r\n              <Avatar/>\r\n              <ProfileInfo/>\r\n          </div>\r\n            <MyPosts posts={props.profilePage.posts}\r\n                     newPost={props.profilePage.newPostText}\r\n                     dispatch={props.dispatch}\r\n            />\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default Profile;","import React from 'react';\nimport './App.scss';\nimport Header from './components/Header/Header';\nimport Navbar from './components/Navbar/Navbar';\nimport Messages from './components/Messages/Messages';\nimport Profile from './components/Profile/Profile';\nimport {BrowserRouter, Redirect, Route, Switch} from 'react-router-dom';\nimport {StoreType} from './state/store';\n\ntype AppPropsType = {\n    store: StoreType\n}\n\nfunction App(props: AppPropsType) {\n\n    const state = props.store.getState();\n\n    return (\n        <BrowserRouter>\n            <div className=\"App-wrapper\">\n                <Header/>\n                <Navbar/>\n                <section className=\"Content\">\n                    <Switch>\n                        <Route path=\"/profile\" render={() => <Profile profilePage={state.profilePage}\n                                                                      dispatch={props.store.dispatch.bind(props.store)}/>}/>\n                        <Route path=\"/messages\" render={() => <Messages newMessage={state.dialogsPage.newMessageText}\n                                                                        messages={state.dialogsPage.messages}\n                                                                        dialogs={state.dialogsPage.dialogs}\n                                                                        dispatch={props.store.dispatch.bind(props.store)}/>}/>\n                        <Redirect to=\"/profile\"/>\n                    </Switch>\n                </section>\n            </div>\n        </BrowserRouter>\n    );\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport React from 'react';\nimport './index.scss';\nimport {store} from './state/store';\nimport App from './App';\n\nexport const rerenderTree = () => {\n    ReactDOM.render(\n        <React.StrictMode>\n            <App store={store}/>\n        </React.StrictMode>,\n        document.getElementById('root')\n    );\n}\n\nstore.subscribe(rerenderTree);\nrerenderTree();"],"sourceRoot":""}